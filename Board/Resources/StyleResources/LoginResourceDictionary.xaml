<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:custom="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:custom1="http://metro.mahapps.com/winfx/xaml/shared" 
					xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml"
					xmlns:cal="http://www.caliburnproject.org"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">
    <!--  应该在此定义资源字典条目。  -->

    <Style x:Key="EmailC1ComboBoxStyle" TargetType="{x:Type c1:C1ComboBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        <Setter Property="ButtonBackground" Value="Gainsboro"/>
        <Setter Property="MouseOverBrush" Value="#FFBDE6FD"/>
        <Setter Property="FocusBrush" Value="#FFA9DAF3"/>
        <Setter Property="SelectedBackground" Value="#FFA9DAF3"/>
        <Setter Property="PressedBrush" Value="#FFA9DAF3"/>
        <Setter Property="SelectionBackground" Value="#FF143D66"/>
        <Setter Property="SelectionForeground" Value="#FFADD6FF"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="ButtonForeground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="ScrollBarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ScrollBar}">
                    <Setter Property="Background" Value="Gainsboro"/>
                    <Setter Property="BorderBrush" Value="#FF707070"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                    <Setter Property="c1:ClearStyleExtensions.ButtonCornerRadius" Value="2"/>
                    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                        <RowDefinition Height="1E-05*"/>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                    </Grid.RowDefinitions>
                                    <c1:C1BrushBuilder x:Name="VBackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                        <c1:C1BrushBuilder.Style>
                                            <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                <Setter Property="DesignBrush" Value="#FFEDEDED"/>
                                                <Setter Property="DesignColor" Value="Gainsboro"/>
                                            </Style>
                                        </c1:C1BrushBuilder.Style>
                                    </c1:C1BrushBuilder>
                                    <c1:ScrollBarCornerRadiusBuilder x:Name="TopButtonCornerRadius" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" TopRight="True"/>
                                    <c1:ScrollBarCornerRadiusBuilder x:Name="BottomButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                    <Border Background="{Binding Output, ElementName=VBackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Grid.RowSpan="5"/>
                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=TopButtonCornerRadius}" Command="ScrollBar.LineUpCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid x:Name="Root" Background="Transparent">
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <SolidColorBrush Color="#FFDCF0FC"/>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <SolidColorBrush Color="#FFC1E4F5"/>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Path Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageUpCommand">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageDownCommand">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                <Thumb.Style>
                                                    <Style TargetType="{x:Type Thumb}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Grid>
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <SolidColorBrush Color="#FFEBEBEB"/>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <SolidColorBrush Color="#FFDCF0FC"/>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <SolidColorBrush Color="#FFC1E4F5"/>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                        </Grid>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=BottomButtonCornerRadius}" Command="ScrollBar.LineDownCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="2" VerticalContentAlignment="Center">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid x:Name="Root" Background="Transparent">
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <SolidColorBrush Color="#FFDCF0FC"/>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <SolidColorBrush Color="#FFC1E4F5"/>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Path Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                    </RepeatButton>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                <ColumnDefinition Width="1E-05*"/>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            </Grid.ColumnDefinitions>
                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                <c1:C1BrushBuilder.Style>
                                                    <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                        <Setter Property="DesignBrush">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="#FFEDEDED"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="DesignColor" Value="Gainsboro"/>
                                                    </Style>
                                                </c1:C1BrushBuilder.Style>
                                            </c1:C1BrushBuilder>
                                            <c1:ScrollBarCornerRadiusBuilder x:Name="LeftButtonCornerRadius" BottomLeft="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                            <c1:ScrollBarCornerRadiusBuilder x:Name="RightButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                            <Border Background="{Binding Output, ElementName=BackgroundBrush}" Grid.ColumnSpan="5" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=LeftButtonCornerRadius}" Command="ScrollBar.LineLeftCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <SolidColorBrush Color="#FFDCF0FC"/>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <SolidColorBrush Color="#FFC1E4F5"/>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                                <Path Data="F1M110.692,342.252L110.692,352.682 104.594,347.467 110.692,342.252z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                            </RepeatButton>
                                            <Track x:Name="PART_Track" Grid.Column="1">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="ScrollBar.PageRightCommand">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="Focusable" Value="False"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Grid>
                                                                                <VisualStateManager.VisualStateGroups>
                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                        <VisualState x:Name="Normal"/>
                                                                                        <VisualState x:Name="MouseOver">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Pressed">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Disabled">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                    </VisualStateGroup>
                                                                                </VisualStateManager.VisualStateGroups>
                                                                                <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <SolidColorBrush Color="#FFEBEBEB"/>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <SolidColorBrush Color="#FFDCF0FC"/>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <SolidColorBrush Color="#FFC1E4F5"/>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                    <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                </Grid>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Track.Thumb>
                                            </Track>
                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="2" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=RightButtonCornerRadius}" Command="ScrollBar.LineRightCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal"/>
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <SolidColorBrush Color="#FFDCF0FC"/>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <SolidColorBrush Color="#FFC1E4F5"/>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                                <Path Data="F1M511.047,352.682L511.047,342.252 517.145,347.467 511.047,352.682z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                            </RepeatButton>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1ComboBox}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ValidationState" Storyboard.TargetName="ValidationDecorator">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="InnerBorderBrush" DesignBrush="#FFFAFBFC" DesignColor="#FFD1DCE8" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed"/>
                        <c1:C1DropDown x:Name="DropDown" AutoSizeMode="GrowAndShrink" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding ButtonBackground}" CornerRadius="{TemplateBinding CornerRadius}" DropDownWidth="{TemplateBinding DropDownWidth}" DisabledCuesVisibility="Visible" DropDownHeight="{TemplateBinding DropDownHeight}" DropDownDirection="{TemplateBinding DropDownDirection}" FocusCuesVisibility="{TemplateBinding FocusCuesVisibility}" FocusBrush="{TemplateBinding FocusBrush}" Foreground="{TemplateBinding ButtonForeground}" HeaderPadding="0" IsTabStop="False" IsEnabled="{TemplateBinding IsEnabled}" MouseOverBrush="{TemplateBinding MouseOverBrush}" MaxDropDownWidth="{TemplateBinding MaxDropDownWidth}" MaxDropDownHeight="{TemplateBinding MaxDropDownHeight}" Padding="0" PressedBrush="{TemplateBinding PressedBrush}">
                            <c1:C1DropDown.Header>
                                <Grid>
                                    <Border Background="{TemplateBinding Background}">
                                        <Border.CornerRadius>
                                            <Binding ConverterParameter="topleft bottomleft" Path="CornerRadius" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <c1:C1SideRadiusConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Border.CornerRadius>
                                    </Border>
                                    <c1:C1TextEditableContentControl x:Name="ComboHeader" BorderThickness="0" DisabledCuesVisibility="Collapsed" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="True" IsEnabled="{TemplateBinding IsEnabled}" Padding="{TemplateBinding Padding}" SelectionForeground="{TemplateBinding SelectionForeground}" SelectionBackground="{TemplateBinding SelectionBackground}" TextAlignment="{TemplateBinding TextAlignment}" VerticalContentAlignment="Center"/>
                                    <Rectangle x:Name="HeaderClickInterceptor" Fill="Transparent"/>
                                </Grid>
                            </c1:C1DropDown.Header>
                            <ScrollViewer x:Name="ScrollViewer" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding CornerRadius}" Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" c1:ClearStyleExtensions.ScrollBarStyle="{Binding ScrollBarStyle, RelativeSource={RelativeSource TemplatedParent}}" VerticalScrollBarVisibility="{Binding (ScrollViewer.VerticalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}">
                                <ScrollViewer.Style>
                                    <Style TargetType="{x:Type ScrollViewer}">
                                        <Setter Property="c1:ClearStyleExtensions.ButtonBackground" Value="White"/>
                                        <Setter Property="c1:ClearStyleExtensions.MouseOverBrush" Value="#FFBDE6FD"/>
                                        <Setter Property="c1:ClearStyleExtensions.PressedBrush" Value="#FFA9DAF3"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                                        <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
                                        <Setter Property="Padding" Value="4"/>
                                        <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="2"/>
                                        <Setter Property="c1:ClearStyleExtensions.ButtonForeground" Value="Black"/>
                                        <Setter Property="c1:ClearStyleExtensions.ScrollBarStyle">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type ScrollBar}">
                                                    <Setter Property="Background" Value="White"/>
                                                    <Setter Property="BorderBrush" Value="#FF707070"/>
                                                    <Setter Property="BorderThickness" Value="1"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                    <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                                                    <Setter Property="c1:ClearStyleExtensions.ButtonCornerRadius" Value="2"/>
                                                    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                        <RowDefinition Height="1E-05*"/>
                                                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                    </Grid.RowDefinitions>
                                                                    <c1:C1BrushBuilder x:Name="VBackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.Style>
                                                                            <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                                                <Setter Property="DesignBrush" Value="White"/>
                                                                                <Setter Property="DesignColor" Value="Gainsboro"/>
                                                                            </Style>
                                                                        </c1:C1BrushBuilder.Style>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:ScrollBarCornerRadiusBuilder x:Name="TopButtonCornerRadius" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" TopRight="True"/>
                                                                    <c1:ScrollBarCornerRadiusBuilder x:Name="BottomButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                    <Border Background="{Binding Output, ElementName=VBackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Grid.RowSpan="5"/>
                                                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=TopButtonCornerRadius}" Command="ScrollBar.LineUpCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Grid x:Name="Root" Background="Transparent">
                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                        <VisualState x:Name="Normal"/>
                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Pressed">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Disabled">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                    </VisualStateGroup>
                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <SolidColorBrush Color="White"/>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <SolidColorBrush Color="White"/>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                            </Grid>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                        <Path Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                                                    </RepeatButton>
                                                                    <Track x:Name="PART_Track" IsDirectionReversed="True" Grid.Row="1">
                                                                        <Track.DecreaseRepeatButton>
                                                                            <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.DecreaseRepeatButton>
                                                                        <Track.IncreaseRepeatButton>
                                                                            <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.IncreaseRepeatButton>
                                                                        <Track.Thumb>
                                                                            <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                <Thumb.Style>
                                                                                    <Style TargetType="{x:Type Thumb}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                    <Grid>
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Pressed">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <SolidColorBrush Color="#FFEBEBEB"/>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <SolidColorBrush Color="#FFDCF0FC"/>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <SolidColorBrush Color="#FFC1E4F5"/>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                            <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                            <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                        </Grid>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Thumb.Style>
                                                                            </Thumb>
                                                                        </Track.Thumb>
                                                                    </Track>
                                                                    <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=BottomButtonCornerRadius}" Command="ScrollBar.LineDownCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="2" VerticalContentAlignment="Center">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Grid x:Name="Root" Background="Transparent">
                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                        <VisualState x:Name="Normal"/>
                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Pressed">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Disabled">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                    </VisualStateGroup>
                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <SolidColorBrush Color="#FFDCF0FC"/>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <SolidColorBrush Color="#FFA9DAF3"/>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                            </Grid>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                        <Path Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z" Fill="{TemplateBinding Foreground}" Height="4" Stretch="Fill" Width="8"/>
                                                                    </RepeatButton>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="Orientation" Value="Horizontal">
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="Foreground" Value="Black"/>
                                                            <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0"/>
                                                            <Setter Property="Width" Value="Auto"/>
                                                            <Setter Property="MinWidth" Value="0"/>
                                                            <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                                <ColumnDefinition Width="1E-05*"/>
                                                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.Style>
                                                                                    <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                                                        <Setter Property="DesignBrush" Value="#FFEDEDED"/>
                                                                                        <Setter Property="DesignColor" Value="Gainsboro"/>
                                                                                    </Style>
                                                                                </c1:C1BrushBuilder.Style>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:ScrollBarCornerRadiusBuilder x:Name="LeftButtonCornerRadius" BottomLeft="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <c1:ScrollBarCornerRadiusBuilder x:Name="RightButtonCornerRadius" BottomRight="True" ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <Border Background="{Binding Output, ElementName=BackgroundBrush}" Grid.ColumnSpan="5" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=LeftButtonCornerRadius}" Command="ScrollBar.LineLeftCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Pressed">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <SolidColorBrush Color="#FFBDE6FD"/>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <SolidColorBrush Color="#FFC1E4F5"/>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                                <Path Data="F1M110.692,342.252L110.692,352.682 104.594,347.467 110.692,342.252z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                                                            </RepeatButton>
                                                                            <Track x:Name="PART_Track" Grid.Column="1">
                                                                                <Track.DecreaseRepeatButton>
                                                                                    <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                        <RepeatButton.Style>
                                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </RepeatButton.Style>
                                                                                    </RepeatButton>
                                                                                </Track.DecreaseRepeatButton>
                                                                                <Track.IncreaseRepeatButton>
                                                                                    <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                        <RepeatButton.Style>
                                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Focusable" Value="False"/>
                                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </RepeatButton.Style>
                                                                                    </RepeatButton>
                                                                                </Track.IncreaseRepeatButton>
                                                                                <Track.Thumb>
                                                                                    <Thumb BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                        <Thumb.Style>
                                                                                            <Style TargetType="{x:Type Thumb}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                            <Grid>
                                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                                        <VisualState x:Name="Normal"/>
                                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                                            <Storyboard>
                                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualState>
                                                                                                                        <VisualState x:Name="Pressed">
                                                                                                                            <Storyboard>
                                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualState>
                                                                                                                        <VisualState x:Name="Disabled">
                                                                                                                            <Storyboard>
                                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualState>
                                                                                                                    </VisualStateGroup>
                                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                                <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush" DesignColor="Gainsboro" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding Background}" Visibility="Collapsed">
                                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                                            <SolidColorBrush Color="#FFEBEBEB"/>
                                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                                    </c1:C1BrushBuilder>
                                                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                                            <SolidColorBrush Color="#FFBDE6FD"/>
                                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                                    </c1:C1BrushBuilder>
                                                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                                            <SolidColorBrush Color="#FFA9DAF3"/>
                                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                                    </c1:C1BrushBuilder>
                                                                                                                    <Border x:Name="BackgroundElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=BackgroundBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"/>
                                                                                                                    <Border x:Name="MouseOverElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                    <Border x:Name="PressedElement" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                                    <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                                </Grid>
                                                                                                            </Grid>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Thumb.Style>
                                                                                    </Thumb>
                                                                                </Track.Thumb>
                                                                            </Track>
                                                                            <RepeatButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="2" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=RightButtonCornerRadius}" Command="ScrollBar.LineRightCommand" HorizontalContentAlignment="Center" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" VerticalContentAlignment="Center">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                        <Setter Property="Focusable" Value="False"/>
                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal"/>
                                                                                                                <VisualState x:Name="MouseOver">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Pressed">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <SolidColorBrush Color="#FFDCF0FC"/>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <c1:C1BrushBuilder x:Name="PressedBrush" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <SolidColorBrush Color="#FFA9DAF3"/>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                        <Border x:Name="PressedElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=PressedBrush}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Visibility="Collapsed"/>
                                                                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                        <Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                                <Path Data="F1M511.047,352.682L511.047,342.252 517.145,347.467 511.047,352.682z" Fill="{TemplateBinding Foreground}" Height="8" Stretch="Fill" Width="4"/>
                                                                            </RepeatButton>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <c1:ScrollViewerCornerRadiusBuilder x:Name="verticalRadiusBuilder" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Orientation="Vertical" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                            <c1:ScrollViewerCornerRadiusBuilder x:Name="horizontalRadiusBuilder" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Orientation="Horizontal" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                            <c1:ScrollViewerContentPresenterClip x:Name="contentPresenterClip" CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" Height="0" HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" ScrollContentPresenter="{Binding ElementName=PART_ScrollContentPresenter}" VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="0"/>
                                                            <Grid Clip="{Binding Output, ElementName=contentPresenterClip}">
                                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                                                            </Grid>
                                                            <ScrollBar x:Name="PART_VerticalScrollBar" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding c1:ClearStyleExtensions.ButtonBackground}" Grid.Column="1" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=verticalRadiusBuilder}" Foreground="{TemplateBinding c1:ClearStyleExtensions.ButtonForeground}" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Minimum="0" Orientation="Vertical" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="0" Style="{TemplateBinding c1:ClearStyleExtensions.ScrollBarStyle}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="18"/>
                                                            <ScrollBar x:Name="PART_HorizontalScrollBar" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding c1:ClearStyleExtensions.ButtonBackground}" Grid.Column="0" c1:ClearStyleExtensions.CornerRadius="{Binding Output, ElementName=horizontalRadiusBuilder}" Foreground="{TemplateBinding c1:ClearStyleExtensions.ButtonForeground}" Height="18" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}" Minimum="0" Orientation="Horizontal" c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}" Grid.Row="1" Style="{TemplateBinding c1:ClearStyleExtensions.ScrollBarStyle}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ScrollViewer.Style>
                                <c1:ScrollViewerTouchBehavior.TouchBehavior>
                                    <c1:ScrollViewerTouchBehavior/>
                                </c1:ScrollViewerTouchBehavior.TouchBehavior>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </c1:C1DropDown>
                        <c1:C1ValidationDecorator x:Name="ValidationDecorator" CornerRadius="{TemplateBinding CornerRadius}" Style="{TemplateBinding ValidationDecoratorStyle}" Target="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
	<Style x:Key="EmailC1ComboBoxItemStyle" TargetType="{x:Type c1:C1ComboBoxItem}">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="White"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="3,2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type c1:C1ComboBoxItem}">
					<Grid x:Name="Root">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FilterCondition">
								<VisualState x:Name="UnselectPrevious"/>
								<VisualState x:Name="SelectFirstOne">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FilterElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<c1:C1BrushBuilder x:Name="SelectedBackground" DesignColor="#FF8ED1E2" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding SelectedBackground}" Visibility="Collapsed">
							<c1:C1BrushBuilder.DesignBrush>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFDEF3FA" Offset="0"/>
									<GradientStop Color="#FFA8D4E3" Offset="1"/>
								</LinearGradientBrush>
							</c1:C1BrushBuilder.DesignBrush>
						</c1:C1BrushBuilder>
						<c1:C1BrushBuilder x:Name="MouseOverBrush" DesignColor="#FFBFE1EA" ExtrapolationMethod="Absolute" IsHitTestVisible="False" Input="{TemplateBinding MouseOverBrush}" Visibility="Collapsed">
							<c1:C1BrushBuilder.DesignBrush>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFF1FBFF" Offset="0"/>
									<GradientStop Color="#FFC5E3ED" Offset="1"/>
								</LinearGradientBrush>
							</c1:C1BrushBuilder.DesignBrush>
						</c1:C1BrushBuilder>
						<Border x:Name="BackgroundElement" Background="{TemplateBinding Background}"/>
						<Border x:Name="SelectedElement" BorderBrush="{TemplateBinding SelectedBackground}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=SelectedBackground}" CornerRadius="2" IsHitTestVisible="False" Visibility="Collapsed"/>
						<Border x:Name="MouseOverElement" BorderBrush="{TemplateBinding MouseOverBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=MouseOverBrush}" CornerRadius="2" IsHitTestVisible="False" Visibility="Collapsed"/>
						<Border x:Name="FilterElement" BorderBrush="{TemplateBinding SelectedBackground}" BorderThickness="{TemplateBinding BorderThickness}" Background="{Binding Output, ElementName=SelectedBackground}" CornerRadius="2" IsHitTestVisible="False" Visibility="Collapsed"/>
                        <Grid Margin="{TemplateBinding BorderThickness}" Height="26">
                            <Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="25"/>
							</Grid.ColumnDefinitions>
							<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
							<Button Grid.Column="1" 
                                    Width="15"
                                    Height="15"
                                    Margin="5,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    FontFamily="Marlett"
                                    FontSize="17"
                                    Foreground="{DynamicResource BlackBrush}"
                                    IsTabStop="False"
                                    Style="{DynamicResource DeleteDataCabinButtonStyle}"
                                    DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type c1:C1ComboBox}}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <cal:ActionMessage MethodName="DeleteEmail">
                                            <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type c1:C1ComboBoxItem}}}" />
                                        </cal:ActionMessage>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </Grid>
						<Border x:Name="DisabledVisualElement" Background="#77E8E8E8" CornerRadius="2" IsHitTestVisible="False" Opacity="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
        <Setter Property="custom:TextBoxHelper.IsMonitoring" Value="True" />
        <Setter Property="custom:ControlsHelper.ButtonWidth" Value="22" />
        <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="custom:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
        <Setter Property="custom:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation Duration="0:0:0.2"
								Storyboard.TargetName="Message"
								Storyboard.TargetProperty="Opacity"
								To="0.2" />
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation Duration="0:0:0.2"
								Storyboard.TargetName="Message"
								Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                        <Storyboard x:Key="enterHasText">
                            <DoubleAnimation Duration="0:0:0.2"
								From="0.2"
								Storyboard.TargetName="Message"
								Storyboard.TargetProperty="Opacity"
								To="0" />
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation Duration="0:0:0.2"
								Storyboard.TargetName="Message"
								Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="Base"
							Fill="{TemplateBinding Background}"
							Opacity="1"
							RadiusX="3"
							RadiusY="3"
							Stroke="{TemplateBinding BorderBrush}">
                            <Rectangle.StrokeThickness>
                                <TemplateBinding Property="BorderThickness">
                                    <TemplateBinding.Converter>
                                        <custom1:ThicknessToDoubleConverter />
                                    </TemplateBinding.Converter>
                                </TemplateBinding>
                            </Rectangle.StrokeThickness>
                        </Rectangle>
                        <Rectangle x:Name="FocusRectangle" Visibility="Collapsed">
                            <Rectangle.StrokeThickness>
                                <TemplateBinding Property="BorderThickness">
                                    <TemplateBinding.Converter>
                                        <custom1:ThicknessToDoubleConverter />
                                    </TemplateBinding.Converter>
                                </TemplateBinding>
                            </Rectangle.StrokeThickness>
                        </Rectangle>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>
                            <Grid x:Name="FloatingMessageContainer"
								Grid.Column="0"
								Grid.ColumnSpan="2"
								Height="0"
								Margin="5,0"
								IsHitTestVisible="False"
								Visibility="Visible">
                                <TextBlock x:Name="FloatingMessage"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									FontSize="{DynamicResource FloatingWatermarkFontSize}"
									Foreground="{TemplateBinding Foreground}"
									Opacity="0.6"
									Text="{TemplateBinding custom:TextBoxHelper.Watermark}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                            <Button x:Name="PART_ClearText"
								Grid.RowSpan="2"
								Grid.Column="2"
								Content="{Binding (custom:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
								FontFamily="{Binding (custom:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
								FontSize="16"
								Foreground="{TemplateBinding Foreground}"
								IsTabStop="False"
								Style="{DynamicResource ChromelessButtonStyle}"
								Template="{Binding (custom:TextBoxHelper.ButtonTemplate), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter x:Name="PART_CapsLockIndicator"
								Grid.Row="0"
								Grid.RowSpan="2"
								Grid.Column="1"
								Width="16"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								Content="{Binding (custom:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
								TextElement.Foreground="{DynamicResource ControlsValidationBrush}"
								ToolTip="{Binding (custom:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
								Visibility="Collapsed" />
                            <Border x:Name="ReadOnlyVisualElement"
								Grid.Row="1"
								Grid.ColumnSpan="2"
								Background="{x:Null}"
								Opacity="0" />
                            <ScrollViewer x:Name="PART_ContentHost"
								Grid.Row="1"
								Grid.Column="0"
								Margin="2"
								VerticalAlignment="Stretch"
								Background="{x:Null}"
								BorderThickness="0"
								IsTabStop="False" />
                            <TextBlock x:Name="Message"
								Grid.Row="1"
								Grid.Column="0"
								Margin="6,2"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Foreground="{TemplateBinding Foreground}"
								IsHitTestVisible="False"
								Opacity="0.6"
								Padding="{TemplateBinding Padding}"
								Text="{TemplateBinding custom:TextBoxHelper.Watermark}"
								Visibility="Collapsed" />
                        </Grid>
                        <Rectangle x:Name="DisabledVisualElement"
							Fill="{DynamicResource ControlsDisabledBrush}"
							IsHitTestVisible="False"
							Opacity="0"
							Stroke="{DynamicResource ControlsDisabledBrush}">
                            <Rectangle.StrokeThickness>
                                <TemplateBinding Property="BorderThickness">
                                    <TemplateBinding.Converter>
                                        <custom1:ThicknessToDoubleConverter />
                                    </TemplateBinding.Converter>
                                </TemplateBinding>
                            </Rectangle.StrokeThickness>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Password, Mode=OneWay, RelativeSource={RelativeSource Self}}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (custom:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessageContainer"
											Storyboard.TargetProperty="Height"
											To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessageContainer"
											Storyboard.TargetProperty="Opacity"
											To="0" />
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessage"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
											To="20">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseIn" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessageContainer"
											Storyboard.TargetProperty="Height"
											To="15">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessageContainer"
											Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessage"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
											To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (custom:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessageContainer"
											Storyboard.TargetProperty="Height"
											To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessageContainer"
											Storyboard.TargetProperty="Opacity"
											To="0" />
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessage"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
											To="20">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseIn" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessageContainer"
											Storyboard.TargetProperty="Height"
											To="15">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessageContainer"
											Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessage"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
											To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (custom:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessageContainer"
											Storyboard.TargetProperty="Height"
											To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessageContainer"
											Storyboard.TargetProperty="Opacity"
											To="0" />
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessage"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
											To="20">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseIn" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessageContainer"
											Storyboard.TargetProperty="Height"
											To="15">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessageContainer"
											Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="FloatingMessage"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
											To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (custom:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="Message" Property="Grid.ColumnSpan" Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="FocusRectangle" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FocusRectangle" Property="Stroke" Value="{Binding (custom:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusRectangle" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FocusRectangle" Property="Stroke" Value="{Binding (custom:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="FloatingMessage" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource BlackBrush}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="custom:TextBoxHelper.HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="Message"
											Storyboard.TargetProperty="Opacity"
											To="0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="Message"
											Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="custom:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
											From="0.2"
											Storyboard.TargetName="Message"
											Storyboard.TargetProperty="Opacity"
											To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
											Storyboard.TargetName="Message"
											Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LoginButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Background"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="3" />
                        <Rectangle x:Name="DisabledVisualElement"
							Fill="{DynamicResource ControlsDisabledBrush}"
							IsHitTestVisible="False"
							Opacity="0"
							RadiusX="3"
							RadiusY="3" />
                        <ContentPresenter x:Name="contentPresenter"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="custom:ButtonHelper.PreserveTextCase" Value="False">
                            <Setter TargetName="contentPresenter" Property="Content" Value="{Binding Content, Converter={custom1:ToUpperConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="custom:ButtonHelper.PreserveTextCase" Value="True">
                            <Setter TargetName="contentPresenter" Property="Content" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="#72B607" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Background" Property="BorderBrush" Value="#619B06" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Background" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>