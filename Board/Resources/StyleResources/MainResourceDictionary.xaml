<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Custom="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:c1="http://schemas.componentone.com/winfx/2006/xaml"
                    xmlns:cal="http://www.caliburnproject.org"
                    xmlns:common="clr-namespace:Board.Common"
                    xmlns:controls="clr-namespace:Board.Controls"
                    xmlns:converters="clr-namespace:Board.Converters"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls">

    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converters:ChartTypeConverter x:Key="ChartTypeConverter" />
    <converters:TypeToNameConverter x:Key="TypeToNameConverter" />
    <converters:ValueConverter x:Key="ValueConverter" />

    <DataTemplate x:Key="GridDataTemplate">
        <Grid Margin="6" SnapsToDevicePixels="true">
            <Decorator>
                <Grid DataContext="{Binding}">
                    <common:ResizeThumb Height="1"
                                        Margin="0 -1 0 0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNS"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Margin="-1 0 0 0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Stretch"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeWE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Margin="0 0 -1 0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Stretch"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeWE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Height="1"
                                        Margin="0 0 0 -1"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNS"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="-1 -1 0 0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNWSE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="0 -1 -1 0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNESW"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="-1 0 0 -1"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNESW"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="0 0 -1 -1"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNWSE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                </Grid>
            </Decorator>
            <Grid x:Name="RootGrid"
                  Width="{Binding ItemWidth,
                                  Mode=TwoWay}"
                  Height="{Binding ItemHeight,
                                   Mode=TwoWay}"
                  MinWidth="100"
                  MinHeight="100"
                  cal:Message.Attach="[Event SizeChanged] = [Action WidgetSizeChanged($this,$source)]">
                <Grid.RowDefinitions>
                    <RowDefinition Height="35" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Background="#E6E6E6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Margin="5,0,0,0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               FontSize="14"
                               Text="{Binding ItemTitle,
                                              Mode=TwoWay}"
                               TextTrimming="WordEllipsis"
                               TextWrapping="NoWrap" />

                    <Grid Grid.Column="1" HorizontalAlignment="Right">
                        <ToggleButton x:Name="SettingToggleButton"
                                      Width="14"
                                      Height="14"
                                      Margin="0,2,10,2"
                                      HorizontalAlignment="Right"
                                      Background="#E6E6E6"
                                      Padding="3"
                                      Style="{DynamicResource ToggleButtonStyle}" />

                        <Popup HorizontalOffset="-57"
                               IsOpen="{Binding IsChecked,
                                                ElementName=SettingToggleButton}"
                               PlacementTarget="{Binding ElementName=SettingToggleButton}"
                               StaysOpen="False"
                               VerticalOffset="5">
                            <c1:C1MenuList Background="#F6F6F6">
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="设置"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="ModifyWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="复制"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="CopyWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="导出Excel"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="ExportGridWidget">
                                                <cal:Parameter Value="{Binding ElementName=RootGrid}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="移除"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="DeleteWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                            </c1:C1MenuList>
                        </Popup>
                    </Grid>
                </Grid>

                <Grid Grid.Row="1">
                    <c1:C1FlexGrid x:Name="FlexGrid"
                                   AutoGenerateColumns="False"
                                   IsReadOnly="true"
                                   ItemsSource="{Binding GridItemSource}"
                                   MaxColumnWidth="130"
                                   MinColumnWidth="30"
                                   Style="{DynamicResource C1FlexGridStyle1}"
                                   cal:Message.Attach="[Event ItemsSourceChanged] = [Action OnItemsSourceChanged($this,$source)]"
                                   common:FlexGridExtensions.BindingColumns="{Binding BindingColumnsConfig}"
                                   common:FlexGridExtensions.BindingFrozenColumns="{Binding BindingFrozenColumns}">
                        <c1:C1FlexGridFilterService.FlexGridFilter>
                            <c1:C1FlexGridFilter />
                        </c1:C1FlexGridFilterService.FlexGridFilter>
                    </c1:C1FlexGrid>
                    <mahapps:ProgressRing HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Stretch"
                                          IsActive="{Binding IsLoading}" />
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="您没有此数据源的权限，请联系管理员开通"
                               Visibility="{Binding IsNoAuthorization}" />
                </Grid>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ChartDataTemplate">
        <Grid Margin="6" SnapsToDevicePixels="true">
            <Decorator>
                <Grid DataContext="{Binding}">
                    <common:ResizeThumb Height="1"
                                        Margin="0 -1 0 0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNS"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Margin="-1 0 0 0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Stretch"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeWE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Margin="0 0 -1 0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Stretch"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeWE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Height="1"
                                        Margin="0 0 0 -1"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNS"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="-1 -1 0 0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNWSE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="0 -1 -1 0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNESW"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="-1 0 0 -1"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNESW"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="0 0 -1 -1"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNWSE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                </Grid>
            </Decorator>
            <Grid x:Name="RootGrid"
                  Width="{Binding ItemWidth,
                                  Mode=TwoWay}"
                  Height="{Binding ItemHeight,
                                   Mode=TwoWay}"
                  MinWidth="100"
                  MinHeight="100"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  cal:Message.Attach="[Event SizeChanged] = [Action WidgetSizeChanged($this,$source)]">
                <Grid.RowDefinitions>
                    <RowDefinition Height="35" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Background="#E6E6E6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Margin="5,0,0,0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               FontSize="14"
                               Text="{Binding ItemTitle,
                                              Mode=TwoWay}"
                               TextTrimming="WordEllipsis"
                               TextWrapping="NoWrap" />

                    <Grid Grid.Column="1" HorizontalAlignment="Right">
                        <ToggleButton x:Name="SettingToggleButton"
                                      Width="14"
                                      Height="14"
                                      Margin="0,2,10,2"
                                      HorizontalAlignment="Right"
                                      Background="#E6E6E6"
                                      Padding="3"
                                      Style="{DynamicResource ToggleButtonStyle}" />

                        <Popup HorizontalOffset="-57"
                               IsOpen="{Binding IsChecked,
                                                ElementName=SettingToggleButton}"
                               PlacementTarget="{Binding ElementName=SettingToggleButton}"
                               StaysOpen="False"
                               VerticalOffset="5">
                            <c1:C1MenuList Background="#F6F6F6">
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="设置"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="ModifyWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="复制"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="CopyWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="导出Excel"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="ExportChartWidget">
                                                <cal:Parameter Value="{Binding ElementName=RootGrid}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="移除"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="DeleteWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                            </c1:C1MenuList>
                        </Popup>
                    </Grid>
                </Grid>

                <Grid Grid.Row="1">
                    <c1:C1Chart x:Name="C1Chart">

                        <c1:C1Chart.Resources>
                            <Style TargetType="{x:Type c1:C1Chart}">
                                <Setter Property="Foreground" Value="#666666" />
                                <Setter Property="CustomPalette">
                                    <Setter.Value>
                                        <ResourceDictionary>
                                            <SolidColorBrush x:Key="0" Color="#459DE1" />
                                            <SolidColorBrush x:Key="1" Color="#F9A349" />
                                            <SolidColorBrush x:Key="2" Color="#AAD04B" />
                                            <SolidColorBrush x:Key="3" Color="#87B8D4" />
                                            <SolidColorBrush x:Key="4" Color="#FBDD2A" />
                                            <SolidColorBrush x:Key="5" Color="#83DB84" />
                                            <SolidColorBrush x:Key="6" Color="#ABD4FC" />
                                            <SolidColorBrush x:Key="7" Color="#F56954" />
                                            <SolidColorBrush x:Key="8" Color="#996699" />
                                            <SolidColorBrush x:Key="9" Color="#FFCC99" />
                                        </ResourceDictionary>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </c1:C1Chart.Resources>
                        <c1:C1Chart.ChartType>
                            <Binding Converter="{StaticResource ChartTypeConverter}"
                                     Mode="TwoWay"
                                     Path="ChartType" />
                        </c1:C1Chart.ChartType>

                        <c1:C1Chart.View>
                            <c1:ChartView common:ChartExtensions.BindingAxis="{Binding Axis}" />
                        </c1:C1Chart.View>

                        <c1:C1Chart.Data>
                            <c1:ChartData ItemNames="{Binding Datas}" SeriesItemsSource="{Binding Series}">
                                <c1:ChartData.SeriesItemTemplate>
                                    <DataTemplate>
                                        <c1:XYDataSeries ItemsSource="{Binding Data}"
                                                         Label="{Binding Label}"
                                                         SymbolStroke="{Binding ConnectionStroke}"
                                                         ValueBinding="{Binding Value}">
                                            <c1:XYDataSeries.PointTooltipTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Path Data="M0.5,0.5 L23,0.5 23,23 11.61165,29.286408 0.5,23 z"
                                                              Fill="#FFF1F1F1"
                                                              Stretch="Fill"
                                                              Stroke="DarkGray"
                                                              StrokeThickness="1" />
                                                        <TextBlock Margin="5 5 5 15"
                                                                   FontSize="10"
                                                                   Foreground="#666666"
                                                                   Text="{Binding Value}" />
                                                    </Grid>
                                                </DataTemplate>
                                            </c1:XYDataSeries.PointTooltipTemplate>
                                        </c1:XYDataSeries>
                                    </DataTemplate>
                                </c1:ChartData.SeriesItemTemplate>
                            </c1:ChartData>
                        </c1:C1Chart.Data>

                        <c1:C1ChartLegend DockPanel.Dock="Top"
                                          Orientation="Horizontal"
                                          Position="TopCenter"
                                          Style="{DynamicResource C1ChartLegendStyle1}" />

                    </c1:C1Chart>
                    <mahapps:ProgressRing HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Stretch"
                                          IsActive="{Binding IsLoading}" />
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="您没有此数据源的权限，请联系管理员开通"
                               Visibility="{Binding IsNoAuthorization}" />
                </Grid>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GaugeDataTemplate">
        <Grid Margin="6" SnapsToDevicePixels="true">
            <Decorator>
                <Grid DataContext="{Binding}">
                    <common:ResizeThumb Height="1"
                                        Margin="0 -1 0 0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNS"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Margin="-1 0 0 0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Stretch"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeWE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Margin="0 0 -1 0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Stretch"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeWE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Height="1"
                                        Margin="0 0 0 -1"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNS"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="-1 -1 0 0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNWSE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="0 -1 -1 0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNESW"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="-1 0 0 -1"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNESW"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="0 0 -1 -1"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNWSE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                </Grid>
            </Decorator>
            <Grid Width="{Binding ItemWidth,
                                  Mode=TwoWay}"
                  Height="{Binding ItemHeight,
                                   Mode=TwoWay}"
                  MinWidth="100"
                  MinHeight="100"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  cal:Message.Attach="[Event SizeChanged] = [Action WidgetSizeChanged($this,$source)]">
                <Grid.RowDefinitions>
                    <RowDefinition Height="35" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Background="#E6E6E6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Margin="5,0,0,0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               FontSize="14"
                               Text="{Binding ItemTitle,
                                              Mode=TwoWay}"
                               TextTrimming="WordEllipsis"
                               TextWrapping="NoWrap" />

                    <Grid HorizontalAlignment="Right">
                        <ToggleButton x:Name="SettingToggleButton"
                                      Width="14"
                                      Height="14"
                                      Margin="0,2,10,2"
                                      HorizontalAlignment="Right"
                                      Background="#E6E6E6"
                                      Padding="3"
                                      Style="{DynamicResource ToggleButtonStyle}" />

                        <Popup HorizontalOffset="-57"
                               IsOpen="{Binding IsChecked,
                                                ElementName=SettingToggleButton}"
                               PlacementTarget="{Binding ElementName=SettingToggleButton}"
                               StaysOpen="False"
                               VerticalOffset="5">
                            <c1:C1MenuList Background="#F6F6F6">
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="设置"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="ModifyWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="复制"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="CopyWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                                <!--<c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="导出Excel"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="ExportWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>-->
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="移除"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="DeleteWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                            </c1:C1MenuList>
                        </Popup>
                    </Grid>
                </Grid>

                <Grid Grid.Row="1">
                    <c1:C1Knob InteractionMode="ClickOrDrag"
                               Maximum="{Binding MaximumValue}"
                               Minimum="{Binding MinimumValue}"
                               PointerCapFill="LightBlue"
                               PointerFill="LightGray"
                               Visibility="{Binding KnobVisibility,
                                                    Converter={StaticResource BoolToVisibilityConverter}}"
                               Value="{Binding GaugeValue}">
                        <c1:C1GaugeLabel From="0"
                                         Interval="20"
                                         Location="1.23"
                                         To="100" />
                        <c1:C1GaugeMark From="0"
                                        Interval="5"
                                        Location="0.95"
                                        To="100" />
                        <c1:C1GaugeRange Fill="White"
                                         From="0"
                                         Location="0.7"
                                         To="20" />
                        <c1:C1GaugeRange Fill="Gray"
                                         From="20"
                                         Location="0.7"
                                         To="40" />
                        <c1:C1GaugeRange Fill="White"
                                         From="40"
                                         Location="0.7"
                                         To="60" />
                        <c1:C1GaugeRange Fill="Gray"
                                         From="60"
                                         Location="0.7"
                                         To="80" />
                        <c1:C1GaugeRange Fill="White"
                                         From="80"
                                         Location="0.7"
                                         To="100" />
                    </c1:C1Knob>
                    <c1:C1LinearGauge Margin="10"
                                      Background="LightBlue"
                                      Maximum="{Binding MaximumValue}"
                                      Minimum="{Binding MinimumValue}"
                                      Orientation="Vertical"
                                      PointerFill="LightGray"
                                      Visibility="{Binding LinearVisibility,
                                                           Converter={StaticResource BoolToVisibilityConverter}}"
                                      XAxisLength="-1"
                                      XAxisLocation="1"
                                      Value="{Binding GaugeValue}">
                        <c1:C1GaugeMark From="0"
                                        Interval="25"
                                        Location="1"
                                        To="100" />
                        <c1:C1GaugeLabel From="0"
                                         Interval="20"
                                         Location="1"
                                         To="100" />
                        <c1:C1GaugeRange Width=".1"
                                         Fill="SpringGreen"
                                         From="0"
                                         To="40" />
                        <c1:C1GaugeRange Width=".1"
                                         Fill="DodgerBlue"
                                         From="40"
                                         To="80" />
                        <c1:C1GaugeRange Width=".1"
                                         Fill="Red"
                                         From="80"
                                         To="100" />
                    </c1:C1LinearGauge>
                    <c1:C1RadialGauge FlowDirection="LeftToRight"
                                      Maximum="{Binding MaximumValue}"
                                      Minimum="{Binding MinimumValue}"
                                      OffAngle="130"
                                      PointerCapFill="LightBlue"
                                      PointerFill="LightGray"
                                      StartAngle="-130"
                                      SweepAngle="260"
                                      Visibility="{Binding RadialVisibility,
                                                           Converter={StaticResource BoolToVisibilityConverter}}"
                                      Value="{Binding GaugeValue}">
                        <c1:C1GaugeLabel From="0"
                                         Interval="20"
                                         Location="1"
                                         To="100" />
                        <c1:C1GaugeMark From="0"
                                        Interval="5"
                                        Location="1"
                                        To="100" />
                        <c1:C1GaugeRange Fill="Red"
                                         From="80"
                                         Location="0.7"
                                         To="100" />
                        <c1:C1GaugeRange Fill="DodgerBlue"
                                         From="40"
                                         Location="0.7"
                                         To="80" />
                        <c1:C1GaugeRange Fill="SpringGreen"
                                         From="0"
                                         Location="0.7"
                                         To="40" />
                    </c1:C1RadialGauge>
                    <c1:C1RegionKnob Maximum="{Binding MaximumValue}"
                                     Minimum="{Binding MinimumValue}"
                                     PointerFill="LightGray"
                                     Visibility="{Binding RegionKnobVisibility,
                                                          Converter={StaticResource BoolToVisibilityConverter}}"
                                     Value="{Binding GaugeValue}">
                        <c1:C1GaugeLabel From="0"
                                         Interval="20"
                                         Location="1"
                                         To="100" />
                        <c1:C1GaugeMark From="0"
                                        Interval="5"
                                        Location="1"
                                        To="100" />
                        <c1:C1GaugeRange Fill="Red"
                                         From="80"
                                         Location="0.7"
                                         To="100" />
                        <c1:C1GaugeRange Fill="DodgerBlue"
                                         From="40"
                                         Location="0.7"
                                         To="80" />
                        <c1:C1GaugeRange Fill="SpringGreen"
                                         From="0"
                                         Location="0.7"
                                         To="40" />
                    </c1:C1RegionKnob>
                    <c1:C1RulerGauge Margin="10"
                                     Maximum="{Binding MaximumValue}"
                                     Minimum="{Binding MinimumValue}"
                                     PointerFill="LightGray"
                                     Visibility="{Binding RulerVisibility,
                                                          Converter={StaticResource BoolToVisibilityConverter}}"
                                     Value="{Binding GaugeValue}">
                        <c1:C1GaugeLabel From="0"
                                         Interval="20"
                                         Location="1"
                                         To="100" />
                        <c1:C1GaugeMark From="0"
                                        Interval="5"
                                        Location="1"
                                        To="100" />
                        <c1:C1GaugeRange Fill="Red"
                                         From="80"
                                         Location="0.7"
                                         To="100" />
                        <c1:C1GaugeRange Fill="DodgerBlue"
                                         From="40"
                                         Location="0.7"
                                         To="80" />
                        <c1:C1GaugeRange Fill="SpringGreen"
                                         From="0"
                                         Location="0.7"
                                         To="40" />
                    </c1:C1RulerGauge>
                    <c1:C1SpeedometerGauge Maximum="{Binding MaximumValue}"
                                           Minimum="{Binding MinimumValue}"
                                           PointerFill="LightGray"
                                           Visibility="{Binding SpeedometerVisibility,
                                                                Converter={StaticResource BoolToVisibilityConverter}}"
                                           Value="{Binding GaugeValue}">
                        <c1:C1GaugeLabel From="0"
                                         Interval="20"
                                         Location="1"
                                         To="100" />
                        <c1:C1GaugeMark From="0"
                                        Interval="5"
                                        Location="1"
                                        To="100" />
                        <c1:C1GaugeRange Fill="Red"
                                         From="80"
                                         Location="0.7"
                                         To="100" />
                        <c1:C1GaugeRange Fill="DodgerBlue"
                                         From="40"
                                         Location="0.7"
                                         To="80" />
                        <c1:C1GaugeRange Fill="SpringGreen"
                                         From="0"
                                         Location="0.7"
                                         To="40" />
                    </c1:C1SpeedometerGauge>
                    <c1:C1VolumeGauge Maximum="{Binding MaximumValue}"
                                      Minimum="{Binding MinimumValue}"
                                      PointerFill="LightGray"
                                      Visibility="{Binding VolumeVisibility,
                                                           Converter={StaticResource BoolToVisibilityConverter}}"
                                      Value="{Binding GaugeValue}">
                        <c1:C1GaugeLabel From="0"
                                         Interval="20"
                                         Location="1"
                                         To="100" />
                        <c1:C1GaugeMark From="0"
                                        Interval="5"
                                        Location="1"
                                        To="100" />
                        <c1:C1GaugeRange Fill="Red"
                                         From="80"
                                         Location="0.7"
                                         To="100" />
                        <c1:C1GaugeRange Fill="DodgerBlue"
                                         From="40"
                                         Location="0.7"
                                         To="80" />
                        <c1:C1GaugeRange Fill="SpringGreen"
                                         From="0"
                                         Location="0.7"
                                         To="40" />
                    </c1:C1VolumeGauge>
                    <mahapps:ProgressRing HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Stretch"
                                          IsActive="{Binding IsLoading}" />
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="您没有此数据源的权限，请联系管理员开通"
                               Visibility="{Binding IsNoAuthorization}" />
                </Grid>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MapDataTemplate">
        <Grid Margin="6" SnapsToDevicePixels="true">
            <Decorator>
                <Grid DataContext="{Binding}">
                    <common:ResizeThumb Height="1"
                                        Margin="0 -1 0 0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNS"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Margin="-1 0 0 0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Stretch"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeWE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Margin="0 0 -1 0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Stretch"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeWE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Height="1"
                                        Margin="0 0 0 -1"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNS"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="-1 -1 0 0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNWSE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="0 -1 -1 0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNESW"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="-1 0 0 -1"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNESW"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                    <common:ResizeThumb Width="1"
                                        Height="1"
                                        Margin="0 0 -1 -1"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        BorderBrush="#E6E6E6"
                                        Cursor="SizeNWSE"
                                        Style="{DynamicResource ResizeThumbStyle}" />
                </Grid>
            </Decorator>
            <Grid Width="{Binding ItemWidth,
                                  Mode=TwoWay}"
                  Height="{Binding ItemHeight,
                                   Mode=TwoWay}"
                  MinWidth="100"
                  MinHeight="100"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  cal:Message.Attach="[Event SizeChanged] = [Action WidgetSizeChanged($this,$source)]">
                <Grid.RowDefinitions>
                    <RowDefinition Height="35" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Background="#E6E6E6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Margin="5,0,0,0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               FontSize="14"
                               Text="{Binding ItemTitle,
                                              Mode=TwoWay}"
                               TextTrimming="WordEllipsis"
                               TextWrapping="NoWrap" />

                    <Grid HorizontalAlignment="Right">
                        <ToggleButton x:Name="SettingToggleButton"
                                      Width="14"
                                      Height="14"
                                      Margin="0,2,10,2"
                                      HorizontalAlignment="Right"
                                      Background="#E6E6E6"
                                      Padding="3"
                                      Style="{DynamicResource ToggleButtonStyle}" />

                        <Popup HorizontalOffset="-57"
                               IsOpen="{Binding IsChecked,
                                                ElementName=SettingToggleButton}"
                               PlacementTarget="{Binding ElementName=SettingToggleButton}"
                               StaysOpen="False"
                               VerticalOffset="5">
                            <c1:C1MenuList Background="#F6F6F6">
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="设置"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="ModifyWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="复制"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="CopyWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                                <!--<c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="导出Excel"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="ExportWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>-->
                                <c1:C1MenuItem Width="75"
                                               Height="26"
                                               HorizontalContentAlignment="Left"
                                               DataContext="{Binding DataContext,
                                                                     RelativeSource={RelativeSource FindAncestor,
                                                                                                    AncestorLevel=1,
                                                                                                    AncestorType={x:Type controls:WidgetListView}}}"
                                               FontSize="16"
                                               Header="移除"
                                               Style="{DynamicResource C1MenuItemStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <cal:ActionMessage MethodName="DeleteWidget">
                                                <cal:Parameter Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Popup}}}" />
                                            </cal:ActionMessage>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </c1:C1MenuItem>
                            </c1:C1MenuList>
                        </Popup>
                    </Grid>
                </Grid>

                <Grid Grid.Row="1">
                    <c1:C1Maps>
                        <c1:C1MapItemsLayer>
                            <Ellipse Width="20"
                                     Height="20"
                                     Fill="Red"
                                     c1:C1MapCanvas.LatLong="-79.9247, 40.4587"
                                     c1:C1MapCanvas.Pinpoint="10, 10" />
                        </c1:C1MapItemsLayer>
                        <!--
                            <c1Maps:C1VectorLayer Margin="2,0,-2,0">
                            <c1Maps:C1VectorPolyline Points="-80.15,42.12 -123.08,39.09, -3.90,30.85" StrokeThickness="3" Stroke="Red">
                            </c1Maps:C1VectorPolyline>
                            </c1Maps:C1VectorLayer>
                        -->
                    </c1:C1Maps>
                    <mahapps:ProgressRing HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Stretch"
                                          IsActive="{Binding IsLoading}" />
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Text="您没有此数据源的权限，请联系管理员开通"
                               Visibility="{Binding IsNoAuthorization}" />
                </Grid>
            </Grid>
        </Grid>
    </DataTemplate>

    <Style x:Key="GroupItemStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Grid Background="#E0E0E0">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Height="32"
                                   Margin="0,11,0,10"
                                   VerticalAlignment="Center"
                                   FontSize="16"
                                   FontStyle="Normal"
                                   FontWeight="Bold"
                                   Padding="14,6,0,0"
                                   Text="{Binding Name,
                                                  Converter={StaticResource TypeToNameConverter}}" />
                        <ItemsPresenter Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderBrush" Value="#00000000" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="0,1,1,1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Path x:Name="Path"
                              Data="M31.679651,15.723C22.841078,15.723 15.677,22.887022 15.677,31.724249 15.677,40.562878 22.841078,47.727002 31.679651,47.727002 40.518124,47.727002 47.682003,40.562878 47.682003,31.724249 47.682003,22.887022 40.518124,15.723 31.679651,15.723z M25.174641,0L30.947304,8.1649995 30.977009,8.163671C31.891628,8.1361193,32.811726,8.1617675,33.732849,8.2423577L34.116646,8.2807278 40.096367,0.5289996 49.181995,4.5158782 47.510448,14.236901 47.626137,14.339919C48.479649,15.11912,49.268909,15.955267,49.990528,16.839653L50.234638,17.14785 60.403648,15.836 64.007996,25.079203 55.322643,31.217757 55.324234,31.258986C55.34618,32.174153,55.314838,33.094563,55.22847,34.015755L55.226952,34.030385 63.345997,40.294331 59.359104,49.380002 49.249798,47.645153 49.143776,47.764214C48.695721,48.255009,48.228832,48.72456,47.744774,49.172226L47.324875,49.549786 48.723995,60.394425 39.48156,64 33.403603,55.403061 33.023663,55.43042C32.149929,55.481137,31.270197,55.483376,30.38839,55.435608L29.679308,55.383191 23.130268,63.875 14.041999,59.886834 15.844025,49.393521 15.71986,49.282948C15.207753,48.815411,14.718776,48.32737,14.253661,47.820706L13.803129,47.315312 3.612031,48.630002 0.0080004195,39.385499 8.0905037,33.673707 8.0481892,33.048829C7.9875851,31.908507,8.0095654,30.758269,8.1175261,29.606822L8.1191311,29.59272 0,23.328246 3.9867127,14.242 14.093521,15.978928 14.104487,15.966273C15.033746,14.935561,16.045525,13.997155,17.124784,13.156928L17.159048,13.131042 15.929999,3.6040602z"
                              Fill="#636363"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Uniform">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#636363" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#2072B2" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#0060AF" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Path" Property="Fill" Value="#FFF4F4F4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WidgetListViewStyle" TargetType="{x:Type controls:WidgetListView}">
        <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:WidgetListView}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Padding="0,0,10,0">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush9}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClientC1ComboBoxItemStyle" TargetType="{x:Type c1:C1ComboBoxItem}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="White" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="3,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1ComboBoxItem}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0:0:0.001"
                                                                       Storyboard.TargetName="MouseOverElement"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0:0:0.001"
                                                                       Storyboard.TargetName="SelectedElement"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FilterCondition">
                                <VisualState x:Name="UnselectPrevious" />
                                <VisualState x:Name="SelectFirstOne">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0:0:0.001"
                                                                       Storyboard.TargetName="FilterElement"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="SelectedBackground"
                                           DesignBrush="#FFFFFF"
                                           DesignColor="#FFFFFF"
                                           ExtrapolationMethod="Absolute"
                                           Input="{TemplateBinding SelectedBackground}"
                                           IsHitTestVisible="False"
                                           Visibility="Collapsed" />
                        <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                           DesignBrush="#FFFFFF"
                                           DesignColor="#FFFFFF"
                                           ExtrapolationMethod="Absolute"
                                           Input="{TemplateBinding MouseOverBrush}"
                                           IsHitTestVisible="False"
                                           Visibility="Collapsed" />
                        <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" />
                        <Border x:Name="SelectedElement"
                                Background="{Binding Output,
                                                     ElementName=SelectedBackground}"
                                BorderBrush="{TemplateBinding SelectedBackground}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                        <Border x:Name="MouseOverElement"
                                Background="{Binding Output,
                                                     ElementName=MouseOverBrush}"
                                BorderBrush="{TemplateBinding MouseOverBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                        <Border x:Name="FilterElement"
                                Background="{Binding Output,
                                                     ElementName=SelectedBackground}"
                                BorderBrush="{TemplateBinding SelectedBackground}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              Height="25"
                                              Margin="10,8,0,0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
                                Background="#77E8E8E8"
                                CornerRadius="2"
                                IsHitTestVisible="False"
                                Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA" />
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA" />
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#FFF8A348" />
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA" />

    <Style x:Key="DataCabinListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <Grid x:Name="Grid"
                              Height="36"
                              Margin="0,0,-5,0">
                            <Rectangle x:Name="label"
                                       Width="0"
                                       Margin="-5,0,0,0"
                                       HorizontalAlignment="Left"
                                       Fill="#2686D2" />
                            <TextBlock x:Name="contentPresenter"
                                       Height="36"
                                       Margin="10,0,0,0"
                                       VerticalAlignment="Center"
                                       FontSize="12"
                                       Padding="10,10,0,14"
                                       Text="{Binding DataCabinName,
                                                      Mode=TwoWay}"
                                       ToolTip="{Binding DataCabinName,
                                                         Mode=TwoWay}" />
                            <Button x:Name="ModifyButton"
                                    Width="12"
                                    Height="12"
                                    Margin="0,0,30,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    FontFamily="Marlett"
                                    FontSize="17"
                                    Foreground="{DynamicResource BlackBrush}"
                                    Style="{DynamicResource ModifyDataCabinButtonStyle}"
                                    Visibility="{Binding CanChange,
                                                         Converter={StaticResource BoolToVisibilityConverter}}"
                                    cal:Message.Attach="[Event Click] = [Action UpdateDataCabin($datacontext)]" />
                            <Button Width="15"
                                    Height="15"
                                    Margin="5,0,10,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    FontFamily="Marlett"
                                    FontSize="17"
                                    Foreground="{DynamicResource BlackBrush}"
                                    IsTabStop="False"
                                    Style="{DynamicResource DeleteDataCabinButtonStyle}"
                                    Visibility="{Binding CanDelete,
                                                         Converter={StaticResource BoolToVisibilityConverter}}"
                                    cal:Message.Attach="[Event Click] = [Action DeleteDataCabin($datacontext)]" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.MouseOver.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.MouseOver.Border}" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="label" Property="Width" Value="0" />
                            <Setter TargetName="Grid" Property="Background" Value="#E0E0E0" />
                            <Setter TargetName="ModifyButton" Property="Background" Value="#E0E0E0" />
                            <Setter TargetName="contentPresenter" Property="Foreground" Value="#444444" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="label" Property="Width" Value="8" />
                            <Setter TargetName="Grid" Property="Background" Value="#F5F5F5" />
                            <Setter TargetName="ModifyButton" Property="Background" Value="#F5F5F5" />
                            <Setter TargetName="contentPresenter" Property="Foreground" Value="#0060AF" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddDataCabinButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusX="3"
                                   RadiusY="3" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="mahapps:ButtonHelper.PreserveTextCase" Value="False">
                            <Setter TargetName="contentPresenter" Property="Content" Value="{Binding Content, Converter={Custom:ToUpperConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="mahapps:ButtonHelper.PreserveTextCase" Value="True">
                            <Setter TargetName="contentPresenter" Property="Content" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource GrayBrush8}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Background" Property="BorderThickness" Value="2" />
                            <Setter TargetName="Background" Property="BorderBrush" Value="#00000000" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModifyDataCabinButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderBrush" Value="#00000000" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="0,1,1,1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Path x:Name="Path"
                              Data="M168.877288818359,0L337.753997802734,125.378739102553 232.19889831543,125.378739102553 232.19889831543,309.000000699232 105.555671691895,309.000000699232 105.555671691895,125.378739102553 0,125.378739102553z"
                              Fill="#A0A0A0"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Uniform">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#A0A0A0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#72B607" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#619B06" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Path" Property="Fill" Value="#FFF4F4F4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteDataCabinButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderBrush" Value="#00000000" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="0,1,1,1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Path x:Name="Path"
                              Data="F1M8.659,10L5.995,7.336 3.341,9.991 2.009,8.659 4.664,6.005 2,3.341 3.341,2 6.005,4.664 8.668,2 10,3.332 7.336,5.995 10,8.659z M10,0L2,0C0.895,0,0,0.895,0,2L0,10C0,11.105,0.895,12,2,12L10,12C11.105,12,12,11.105,12,10L12,2C12,0.895,11.105,0,10,0"
                              Fill="#A0A0A0"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Uniform">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="0" />
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#A0A0A0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#FBB12A" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#EA9E0C" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Path" Property="Fill" Value="#FFF4F4F4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddWidgetButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusX="3"
                                   RadiusY="3" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="mahapps:ButtonHelper.PreserveTextCase" Value="False">
                            <Setter TargetName="contentPresenter" Property="Content" Value="{Binding Content, Converter={Custom:ToUpperConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="mahapps:ButtonHelper.PreserveTextCase" Value="True">
                            <Setter TargetName="contentPresenter" Property="Content" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter TargetName="Background" Property="Background" Value="#2072B2" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="#0060AF" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Background" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070" />
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FBB12A" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF" />
    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC" />
    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#F8A348" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD" />
    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121" />
    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121" />
    <Style x:Key="LeftDateRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border BorderBrush="#D2D2D2"
                            BorderThickness="1,1,0,1"
                            CornerRadius="3,0,0,3">
                        <Grid x:Name="templateRoot"
                              Background="Transparent"
                              SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="templateRoot" Property="Background" Value="#FBB12A" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource RadioButton.Disabled.Background}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="templateRoot" Property="Background" Value="#F8A348" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="templateRoot" Property="Background" Value="#F8A348" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="templateRoot" Property="Background" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MiddleDateRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border BorderBrush="#D2D2D2"
                            BorderThickness="0,1,0,1"
                            CornerRadius="0">
                        <Grid x:Name="templateRoot"
                              Background="Transparent"
                              SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="templateRoot" Property="Background" Value="#FBB12A" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource RadioButton.Disabled.Background}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="templateRoot" Property="Background" Value="#F8A348" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="templateRoot" Property="Background" Value="#F8A348" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="templateRoot" Property="Background" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RightDateRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border BorderBrush="#D2D2D2"
                            BorderThickness="0,1,1,1"
                            CornerRadius="0,3,3,0">
                        <Grid x:Name="templateRoot"
                              Background="Transparent"
                              SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="templateRoot" Property="Background" Value="#FBB12A" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource RadioButton.Disabled.Background}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="templateRoot" Property="Background" Value="#F8A348" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="templateRoot" Property="Background" Value="#F8A348" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="templateRoot" Property="Background" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UserToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource WhiteBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusX="3"
                                   RadiusY="3" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Background" Property="BorderThickness" Value="2" />
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource GrayBrush2}" />
                            <Setter TargetName="Background" Property="BorderBrush" Value="{DynamicResource GrayBrush5}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource GrayBrush8}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource GrayBrush3}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True" />
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderBrush" Value="#00000000" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <Path x:Name="Path"
                              Width="14"
                              Height="14"
                              Margin="0"
                              Data="M31.679651,15.723C22.841078,15.723 15.677,22.887022 15.677,31.724249 15.677,40.562878 22.841078,47.727002 31.679651,47.727002 40.518124,47.727002 47.682003,40.562878 47.682003,31.724249 47.682003,22.887022 40.518124,15.723 31.679651,15.723z M25.174641,0L30.947304,8.1649995 30.977009,8.163671C31.891628,8.1361193,32.811726,8.1617675,33.732849,8.2423577L34.116646,8.2807278 40.096367,0.5289996 49.181995,4.5158782 47.510448,14.236901 47.626137,14.339919C48.479649,15.11912,49.268909,15.955267,49.990528,16.839653L50.234638,17.14785 60.403648,15.836 64.007996,25.079203 55.322643,31.217757 55.324234,31.258986C55.34618,32.174153,55.314838,33.094563,55.22847,34.015755L55.226952,34.030385 63.345997,40.294331 59.359104,49.380002 49.249798,47.645153 49.143776,47.764214C48.695721,48.255009,48.228832,48.72456,47.744774,49.172226L47.324875,49.549786 48.723995,60.394425 39.48156,64 33.403603,55.403061 33.023663,55.43042C32.149929,55.481137,31.270197,55.483376,30.38839,55.435608L29.679308,55.383191 23.130268,63.875 14.041999,59.886834 15.844025,49.393521 15.71986,49.282948C15.207753,48.815411,14.718776,48.32737,14.253661,47.820706L13.803129,47.315312 3.612031,48.630002 0.0080004195,39.385499 8.0905037,33.673707 8.0481892,33.048829C7.9875851,31.908507,8.0095654,30.758269,8.1175261,29.606822L8.1191311,29.59272 0,23.328246 3.9867127,14.242 14.093521,15.978928 14.104487,15.966273C15.033746,14.935561,16.045525,13.997155,17.124784,13.156928L17.159048,13.131042 15.929999,3.6040602z"
                              Fill="#999999"
                              Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Path" Property="Fill" Value="#2787D3" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            <Setter TargetName="Path" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WidgetListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource Item.SelectedInactive.Background}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Item.SelectedInactive.Border}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="C1MenuItemStyle" TargetType="{x:Type c1:C1MenuItem}">
        <Setter Property="Background" Value="Gainsboro" />
        <Setter Property="BorderBrush" Value="#FF707070" />
        <Setter Property="HighlightedBackground" Value="#FFF8A348" />
        <Setter Property="OpenedBackground" Value="#FFA9DAF3" />
        <Setter Property="Padding" Value="10,1" />
        <Setter Property="BorderThickness" Value="0" />
        <Style.BasedOn>
            <Style TargetType="{x:Type c1:C1MenuItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type c1:C1MenuItem}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                                 Storyboard.TargetName="DisabledVisualElement"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="OpenStates">
                                        <VisualState x:Name="Closed" />
                                        <VisualState x:Name="Opened">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                               Duration="0:0:0.001"
                                                                               Storyboard.TargetName="OpenedElement"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="HighlightedStates">
                                        <VisualState x:Name="NonHighlighted" />
                                        <VisualState x:Name="Highlighted">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                               Duration="0:0:0.001"
                                                                               Storyboard.TargetName="HighlightedElement"
                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <c1:C1BrushBuilder x:Name="OpenedBackground"
                                                   DesignColor="#FF8ED1E2"
                                                   ExtrapolationMethod="Absolute"
                                                   Input="{TemplateBinding OpenedBackground}"
                                                   IsHitTestVisible="False"
                                                   Visibility="Collapsed">
                                    <c1:C1BrushBuilder.DesignBrush>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#FFC6E5F0" />
                                            <GradientStop Offset="1" Color="#FFA8D4E3" />
                                        </LinearGradientBrush>
                                    </c1:C1BrushBuilder.DesignBrush>
                                </c1:C1BrushBuilder>
                                <c1:C1BrushBuilder x:Name="HighlightedBackground"
                                                   DesignBrush="#F8A348"
                                                   DesignColor="#F8A348"
                                                   ExtrapolationMethod="Absolute"
                                                   Input="{TemplateBinding HighlightedBackground}"
                                                   IsHitTestVisible="False"
                                                   Visibility="Collapsed" />
                                <c1:C1BrushBuilder x:Name="BackgroundBrush"
                                                   DesignBrush="#FFF5F7F9"
                                                   DesignColor="#FFD1DCE8"
                                                   ExtrapolationMethod="Absolute"
                                                   Input="{TemplateBinding HeaderBackground}"
                                                   IsHitTestVisible="False"
                                                   Visibility="Collapsed" />
                                <c1:C1BrushBuilder x:Name="LeftPanelBackgroundBrush"
                                                   DesignBrush="#FFE9EEF5"
                                                   DesignColor="#FFD1DCE8"
                                                   ExtrapolationMethod="Absolute"
                                                   Input="{TemplateBinding Background}"
                                                   IsHitTestVisible="False"
                                                   Visibility="Collapsed" />
                                <Grid x:Name="HeaderPanel">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.ColumnSpan="3" Background="{Binding Output, ElementName=BackgroundBrush}" />
                                    <Border x:Name="LeftPanel"
                                            Background="{Binding Output,
                                                                 ElementName=LeftPanelBackgroundBrush}"
                                            CornerRadius="1,0,0,1" />
                                    <Border x:Name="OpenedElement"
                                            Grid.ColumnSpan="3"
                                            Background="{Binding Output,
                                                                 ElementName=OpenedBackground}"
                                            BorderBrush="{TemplateBinding OpenedBackground}"
                                            BorderThickness="1"
                                            CornerRadius="1"
                                            IsHitTestVisible="False"
                                            Visibility="Collapsed" />
                                    <Border x:Name="HighlightedElement"
                                            Grid.ColumnSpan="3"
                                            Background="{Binding Output,
                                                                 ElementName=HighlightedBackground}"
                                            BorderBrush="{TemplateBinding HighlightedBackground}"
                                            BorderThickness="1"
                                            CornerRadius="1"
                                            IsHitTestVisible="False"
                                            Visibility="Collapsed" />
                                    <StackPanel Orientation="Horizontal">
                                        <ContentControl x:Name="MenuIcon"
                                                        MaxWidth="25"
                                                        HorizontalContentAlignment="Center"
                                                        VerticalContentAlignment="Center" />
                                        <CheckBox x:Name="CheckIcon"
                                                  Margin="5,0,0,0"
                                                  Content=""
                                                  Foreground="{TemplateBinding HeaderForeground}"
                                                  IsChecked="True"
                                                  IsEnabled="False"
                                                  Visibility="Collapsed">
                                            <CheckBox.Style>
                                                <Style TargetType="{x:Type CheckBox}">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                                    <Setter Property="Padding" Value="4,1,0,0" />
                                                    <Setter Property="Height" Value="16" />
                                                    <Setter Property="Width" Value="16" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type CheckBox}">
                                                                <Grid>
                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualState x:Name="Normal" />
                                                                            <VisualState x:Name="MouseOver" />
                                                                            <VisualState x:Name="Pressed" />
                                                                            <VisualState x:Name="Disabled" />
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="CheckStates">
                                                                            <VisualState x:Name="Checked">
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                        <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                            <VisualState x:Name="Unchecked" />
                                                                            <VisualState x:Name="Indeterminate">
                                                                                <Storyboard>
                                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                        <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                                                                    </DoubleAnimationUsingKeyFrames>
                                                                                </Storyboard>
                                                                            </VisualState>
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="FocusStates">
                                                                            <VisualState x:Name="Focused" />
                                                                            <VisualState x:Name="Unfocused" />
                                                                        </VisualStateGroup>
                                                                        <VisualStateGroup x:Name="ValidationStates">
                                                                            <VisualState x:Name="Valid" />
                                                                            <VisualState x:Name="InvalidUnfocused" />
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <Grid>
                                                                        <Path x:Name="CheckIcon"
                                                                              Data="M0,5.7988567L2.7333393,5.0066962 4.0666714,7.0785151C4.0666714,7.0785151 5.5397763,3.3975108 6.9999976,1.7154117 8.53333,-0.050929058 11,0.00014400299 11,0.00014400299 11,0.00014400299 9.1054287,1.5756328 8.4666672,2.3763855 7.4513879,3.6490839 4.3819699,10 4.3819699,10z"
                                                                              Fill="{TemplateBinding Foreground}"
                                                                              Opacity="0">
                                                                            <Path.Style>
                                                                                <Style TargetType="{x:Type Path}">
                                                                                    <Setter Property="Height" Value="10" />
                                                                                    <Setter Property="Width" Value="10.5" />
                                                                                    <Setter Property="Margin" Value="1,1,0,1.5" />
                                                                                </Style>
                                                                            </Path.Style>
                                                                        </Path>
                                                                        <Rectangle x:Name="IndeterminateIcon"
                                                                                   Width="6"
                                                                                   Height="2"
                                                                                   Fill="{TemplateBinding Foreground}"
                                                                                   Opacity="0" />
                                                                    </Grid>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </CheckBox.Style>
                                        </CheckBox>
                                    </StackPanel>
                                    <ContentControl Grid.Column="1"
                                                    Margin="{TemplateBinding Padding}"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Background="{TemplateBinding HeaderBackground}"
                                                    FontFamily="{TemplateBinding FontFamily}"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    FontStretch="{TemplateBinding FontStretch}"
                                                    FontStyle="{TemplateBinding FontStyle}"
                                                    FontWeight="{TemplateBinding FontWeight}"
                                                    Foreground="{TemplateBinding HeaderForeground}"
                                                    Padding="{TemplateBinding Padding}">
                                        <ContentPresenter x:Name="HeaderPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                                    </ContentControl>
                                    <Path x:Name="ExpandIcon"
                                          Grid.Column="2"
                                          Width="4"
                                          Height="7"
                                          Margin="2,2,4,2"
                                          Data="M0,0L3.5,3.5 0,7z"
                                          Fill="{TemplateBinding Foreground}"
                                          Stretch="Fill" />
                                </Grid>
                                <Popup x:Name="SubItemsPopup" HorizontalAlignment="Right">
                                    <ContentControl x:Name="_contentControl"
                                                    MaxHeight="{Binding SubMenuMaxHeight,
                                                                        RelativeSource={RelativeSource TemplatedParent}}"
                                                    Background="{Binding Background,
                                                                         RelativeSource={RelativeSource TemplatedParent}}"
                                                    BorderBrush="{Binding BorderBrush,
                                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                                    BorderThickness="{Binding BorderThickness,
                                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                                    Foreground="{Binding Foreground,
                                                                         RelativeSource={RelativeSource TemplatedParent}}">
                                        <ContentControl.Style>
                                            <Style TargetType="{x:Type ContentControl}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ContentControl}">
                                                            <Grid>
                                                                <c1:C1BrushBuilder x:Name="BackgroundBrush"
                                                                                   DesignBrush="#FFF5F7F9"
                                                                                   DesignColor="#FFD1DCE8"
                                                                                   ExtrapolationMethod="Absolute"
                                                                                   Input="{TemplateBinding Background}"
                                                                                   IsHitTestVisible="False"
                                                                                   Visibility="Collapsed" />
                                                                <Border x:Name="BackgroundElement"
                                                                        Background="{Binding Output,
                                                                                             ElementName=BackgroundBrush}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        CornerRadius="1">
                                                                    <c1:C1ScrollViewer Background="{TemplateBinding Background}"
                                                                                       BorderBrush="{TemplateBinding BorderBrush}"
                                                                                       BorderThickness="0"
                                                                                       HorizontalScrollBarVisibility="Collapsed"
                                                                                       VerticalScrollBarVisibility="Visible">
                                                                        <ContentPresenter x:Name="Content"
                                                                                          Content="{TemplateBinding Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                                    </c1:C1ScrollViewer>
                                                                </Border>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ContentControl.Style>
                                        <ItemsPresenter x:Name="SubItemsPresenter" />
                                    </ContentControl>
                                </Popup>
                                <Border x:Name="DisabledVisualElement"
                                        Background="#77E8E8E8"
                                        CornerRadius="1"
                                        IsHitTestVisible="False"
                                        Opacity="0"
                                        Visibility="{TemplateBinding DisabledCuesVisibility}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <Style x:Key="AddDataCabinTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
        <Setter Property="mahapps:TextBoxHelper.IsMonitoring" Value="True" />
        <Setter Property="mahapps:ControlsHelper.ButtonWidth" Value="22" />
        <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="mahapps:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
        <Setter Property="mahapps:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
        <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="Message"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.2" />
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="Message"
                                             Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                        <Storyboard x:Key="enterHasText">
                            <DoubleAnimation Duration="0:0:0.2"
                                             From="0.2"
                                             Storyboard.TargetName="Message"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0" />
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="Message"
                                             Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle x:Name="Base"
                                   Fill="{TemplateBinding Background}"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   RadiusX="3"
                                   RadiusY="3"
                                   Visibility="Collapsed">
                            <Rectangle.StrokeThickness>
                                <TemplateBinding Property="BorderThickness">
                                    <TemplateBinding.Converter>
                                        <Custom:ThicknessToDoubleConverter />
                                    </TemplateBinding.Converter>
                                </TemplateBinding>
                            </Rectangle.StrokeThickness>
                        </Rectangle>
                        <Grid x:Name="PART_InnerGrid" Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="{Binding (mahapps:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>
                            <Grid x:Name="FloatingMessageContainer"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="2"
                                  Height="0"
                                  Margin="5,0"
                                  IsHitTestVisible="False"
                                  Visibility="Visible">
                                <TextBlock x:Name="FloatingMessage"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           FontSize="{DynamicResource FloatingWatermarkFontSize}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Opacity="0.6"
                                           Text="{TemplateBinding mahapps:TextBoxHelper.Watermark}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                            <Button x:Name="PART_ClearText"
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    Content="{Binding (mahapps:TextBoxHelper.ButtonContent),
                                                      Mode=OneWay,
                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                    FontFamily="{Binding (mahapps:TextBoxHelper.ButtonFontFamily),
                                                         Mode=OneWay,
                                                         RelativeSource={RelativeSource TemplatedParent}}"
                                    FontSize="16"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsTabStop="False"
                                    Style="{DynamicResource ChromelessButtonStyle}">
                                <Button.Visibility>
                                    <Binding Mode="OneWay"
                                             Path="(mahapps:TextBoxHelper.ClearTextButton)"
                                             RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <BooleanToVisibilityConverter />
                                        </Binding.Converter>
                                    </Binding>
                                </Button.Visibility>
                            </Button>
                            <Border x:Name="ReadOnlyVisualElement"
                                    Grid.Row="1"
                                    Grid.ColumnSpan="2"
                                    Background="{x:Null}"
                                    Opacity="0" />
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Grid.Row="1"
                                          Grid.Column="0"
                                          Margin="2"
                                          VerticalAlignment="Stretch"
                                          Background="{x:Null}"
                                          BorderThickness="0"
                                          IsTabStop="False" />
                            <TextBlock x:Name="Message"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Margin="6,2"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{TemplateBinding Foreground}"
                                       IsHitTestVisible="False"
                                       Opacity="0.6"
                                       Padding="{TemplateBinding Padding}"
                                       Text="{TemplateBinding mahapps:TextBoxHelper.Watermark}"
                                       Visibility="Collapsed" />
                        </Grid>
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{DynamicResource ControlsDisabledBrush}">
                            <Rectangle.StrokeThickness>
                                <TemplateBinding Property="BorderThickness">
                                    <TemplateBinding.Converter>
                                        <Custom:ThicknessToDoubleConverter />
                                    </TemplateBinding.Converter>
                                </TemplateBinding>
                            </Rectangle.StrokeThickness>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                            <Setter TargetName="Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (mahapps:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Height"
                                                         To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessage"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                         To="20">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseIn" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Height"
                                                         To="15">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessage"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                         To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (mahapps:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Height"
                                                         To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessage"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                         To="20">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseIn" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Height"
                                                         To="15">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessage"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                         To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (mahapps:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Height"
                                                         To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessage"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                         To="20">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseIn" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Height"
                                                         To="15">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessageContainer"
                                                         Storyboard.TargetProperty="Opacity" />
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="FloatingMessage"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                         To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="2" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TextWrapping" Value="NoWrap" />
                                <Condition Property="AcceptsReturn" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonColumn" Property="Width" Value="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}" />
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding (mahapps:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
                            <Setter TargetName="Message" Property="Grid.ColumnSpan" Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="FocusRectangle" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FocusRectangle" Property="Stroke" Value="{Binding (mahapps:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="ReadOnlyVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusRectangle" Property="Visibility" Value="Visible" />
                            <Setter TargetName="FocusRectangle" Property="Stroke" Value="{Binding (mahapps:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="FloatingMessage" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource BlackBrush}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="mahapps:TextBoxHelper.HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="Message"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="Message"
                                                         Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="mahapps:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         From="0.2"
                                                         Storyboard.TargetName="Message"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="Message"
                                                         Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="mahapps:TextBoxHelper.IsWaitingForData" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation AutoReverse="True"
                                                         Duration="0:0:2"
                                                         From="0"
                                                         RepeatBehavior="Forever"
                                                         Storyboard.TargetName="Base"
                                                         Storyboard.TargetProperty="(Effect).Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Setter TargetName="Base" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10"
                                                      Opacity="0"
                                                      ShadowDepth="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="mahapps:TextBoxHelper.IsWaitingForData" Value="False">
                            <Setter TargetName="Base" Property="Effect" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClientC1ComboBoxStyle" TargetType="{x:Type c1:C1ComboBox}">
        <Setter Property="BorderBrush" Value="#FF707070" />
        <Setter Property="ButtonBackground" Value="Gainsboro" />
        <Setter Property="MouseOverBrush" Value="#FBB12A" />
        <Setter Property="FocusBrush" Value="#FFA9DAF3" />
        <Setter Property="SelectedBackground" Value="#F8A348" />
        <Setter Property="PressedBrush" Value="#F8A348" />
        <Setter Property="SelectionBackground" Value="#F8A348" />
        <Setter Property="SelectionForeground" Value="#FFADD6FF" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="ButtonForeground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="ScrollBarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ScrollBar}">
                    <Setter Property="Background" Value="Gainsboro" />
                    <Setter Property="BorderBrush" Value="#FF707070" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0" />
                    <Setter Property="c1:ClearStyleExtensions.ButtonCornerRadius" Value="2" />
                    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                        <RowDefinition Height="1E-05*" />
                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                    </Grid.RowDefinitions>
                                    <c1:C1BrushBuilder x:Name="VBackgroundBrush"
                                                       ExtrapolationMethod="Absolute"
                                                       Input="{TemplateBinding Background}"
                                                       IsHitTestVisible="False"
                                                       Visibility="Collapsed">
                                        <c1:C1BrushBuilder.Style>
                                            <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                <Setter Property="DesignBrush">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                            <GradientStop Offset="0" Color="#FFE1E1E1" />
                                                            <GradientStop Offset="0.2" Color="#FFEDEDED" />
                                                            <GradientStop Offset="0.8" Color="#FFEDEDED" />
                                                            <GradientStop Offset="1" Color="#FFE3E3E3" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="DesignColor" Value="Gainsboro" />
                                            </Style>
                                        </c1:C1BrushBuilder.Style>
                                    </c1:C1BrushBuilder>
                                    <c1:ScrollBarCornerRadiusBuilder x:Name="TopButtonCornerRadius"
                                                                     ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}"
                                                                     ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                     TopRight="True" />
                                    <c1:ScrollBarCornerRadiusBuilder x:Name="BottomButtonCornerRadius"
                                                                     BottomRight="True"
                                                                     ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}"
                                                                     ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                    <Border Grid.RowSpan="5"
                                            Background="{Binding Output,
                                                                 ElementName=VBackgroundBrush}"
                                            CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                    <RepeatButton HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  Command="ScrollBar.LineUpCommand"
                                                  c1:ClearStyleExtensions.CornerRadius="{Binding Output,
                                                                                                 ElementName=TopButtonCornerRadius}"
                                                  c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                  c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="IsTabStop" Value="False" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid x:Name="Root" Background="Transparent">
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal" />
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                               Storyboard.TargetName="MouseOverElement"
                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                               Storyboard.TargetName="PressedElement"
                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                               Storyboard.TargetName="DisabledVisualElement"
                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                                   DesignColor="#FFBFE1EA"
                                                                                   ExtrapolationMethod="Absolute"
                                                                                   Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                   IsHitTestVisible="False"
                                                                                   Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                            <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                            <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                            <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                            <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                                   DesignColor="#FF8ED1E2"
                                                                                   ExtrapolationMethod="Absolute"
                                                                                   Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                                   IsHitTestVisible="False"
                                                                                   Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                            <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                            <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                            <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                            <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <Border x:Name="MouseOverElement"
                                                                        Background="{Binding Output,
                                                                                             ElementName=MouseOverBrush}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                        Visibility="Collapsed" />
                                                                <Border x:Name="PressedElement"
                                                                        Background="{Binding Output,
                                                                                             ElementName=PressedBrush}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                        Visibility="Collapsed" />
                                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                  Content="{TemplateBinding Content}"
                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                  RecognizesAccessKey="True"
                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <Border x:Name="DisabledVisualElement"
                                                                        Background="#77E8E8E8"
                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                        IsHitTestVisible="False"
                                                                        Visibility="Collapsed" />
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Path Width="8"
                                              Height="4"
                                              Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z"
                                              Fill="{TemplateBinding Foreground}"
                                              Stretch="Fill" />
                                    </RepeatButton>
                                    <Track x:Name="PART_Track"
                                           Grid.Row="1"
                                           IsDirectionReversed="True">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageUpCommand">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="Focusable" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Width="{TemplateBinding Width}"
                                                                               Height="{TemplateBinding Height}"
                                                                               Fill="{TemplateBinding Background}" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="ScrollBar.PageDownCommand">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="Focusable" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Width="{TemplateBinding Width}"
                                                                               Height="{TemplateBinding Height}"
                                                                               Fill="{TemplateBinding Background}" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Background="{TemplateBinding Background}"
                                                   BorderBrush="{TemplateBinding BorderBrush}"
                                                   BorderThickness="{TemplateBinding BorderThickness}"
                                                   c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}"
                                                   c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                   c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                <Thumb.Style>
                                                    <Style TargetType="{x:Type Thumb}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Grid>
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal" />
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                       Storyboard.TargetName="MouseOverElement"
                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                       Storyboard.TargetName="PressedElement"
                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                       Storyboard.TargetName="DisabledVisualElement"
                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush"
                                                                                               DesignColor="Gainsboro"
                                                                                               ExtrapolationMethod="Absolute"
                                                                                               Input="{TemplateBinding Background}"
                                                                                               IsHitTestVisible="False"
                                                                                               Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                        <GradientStop Offset="0" Color="#FFF2F2F2" />
                                                                                        <GradientStop Offset="0.5" Color="#FFEBEBEB" />
                                                                                        <GradientStop Offset="0.5" Color="Gainsboro" />
                                                                                        <GradientStop Offset="1" Color="#FFD0D0D0" />
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                                               DesignColor="#FFBFE1EA"
                                                                                               ExtrapolationMethod="Absolute"
                                                                                               Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                               IsHitTestVisible="False"
                                                                                               Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                        <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                                        <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                                        <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                                        <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                                               DesignColor="#FF8ED1E2"
                                                                                               ExtrapolationMethod="Absolute"
                                                                                               Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                                               IsHitTestVisible="False"
                                                                                               Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                        <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                                        <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                                        <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                                        <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                                    </LinearGradientBrush>
                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                            </c1:C1BrushBuilder>
                                                                            <Border x:Name="BackgroundElement"
                                                                                    Background="{Binding Output,
                                                                                                         ElementName=BackgroundBrush}"
                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                                            <Border x:Name="MouseOverElement"
                                                                                    Background="{Binding Output,
                                                                                                         ElementName=MouseOverBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                    Visibility="Collapsed" />
                                                                            <Border x:Name="PressedElement"
                                                                                    Background="{Binding Output,
                                                                                                         ElementName=PressedBrush}"
                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                    Visibility="Collapsed" />
                                                                            <Border x:Name="DisabledVisualElement"
                                                                                    Background="#77E8E8E8"
                                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                    IsHitTestVisible="False"
                                                                                    Visibility="Collapsed" />
                                                                        </Grid>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton Grid.Row="2"
                                                  HorizontalContentAlignment="Center"
                                                  VerticalContentAlignment="Center"
                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  Command="ScrollBar.LineDownCommand"
                                                  c1:ClearStyleExtensions.CornerRadius="{Binding Output,
                                                                                                 ElementName=BottomButtonCornerRadius}"
                                                  c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                  c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="IsTabStop" Value="False" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Grid x:Name="Root" Background="Transparent">
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal" />
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                               Storyboard.TargetName="MouseOverElement"
                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                               Storyboard.TargetName="PressedElement"
                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                               Storyboard.TargetName="DisabledVisualElement"
                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                                   DesignColor="#FFBFE1EA"
                                                                                   ExtrapolationMethod="Absolute"
                                                                                   Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                   IsHitTestVisible="False"
                                                                                   Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                            <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                            <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                            <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                            <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                                   DesignColor="#FF8ED1E2"
                                                                                   ExtrapolationMethod="Absolute"
                                                                                   Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                                   IsHitTestVisible="False"
                                                                                   Visibility="Collapsed">
                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                            <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                            <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                            <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                            <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                        </LinearGradientBrush>
                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                </c1:C1BrushBuilder>
                                                                <Border x:Name="MouseOverElement"
                                                                        Background="{Binding Output,
                                                                                             ElementName=MouseOverBrush}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                        Visibility="Collapsed" />
                                                                <Border x:Name="PressedElement"
                                                                        Background="{Binding Output,
                                                                                             ElementName=PressedBrush}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                        Visibility="Collapsed" />
                                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                  Content="{TemplateBinding Content}"
                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                  RecognizesAccessKey="True"
                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <Border x:Name="DisabledVisualElement"
                                                                        Background="#77E8E8E8"
                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                        IsHitTestVisible="False"
                                                                        Visibility="Collapsed" />
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                        <Path Width="8"
                                              Height="4"
                                              Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z"
                                              Fill="{TemplateBinding Foreground}"
                                              Stretch="Fill" />
                                    </RepeatButton>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0" />
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="MinWidth" Value="0" />
                            <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                                <ColumnDefinition Width="1E-05*" />
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                            </Grid.ColumnDefinitions>
                                            <c1:C1BrushBuilder x:Name="BackgroundBrush"
                                                               ExtrapolationMethod="Absolute"
                                                               Input="{TemplateBinding Background}"
                                                               IsHitTestVisible="False"
                                                               Visibility="Collapsed">
                                                <c1:C1BrushBuilder.Style>
                                                    <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                        <Setter Property="DesignBrush">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <GradientStop Offset="0" Color="#FFE1E1E1" />
                                                                    <GradientStop Offset="0.2" Color="#FFEDEDED" />
                                                                    <GradientStop Offset="0.8" Color="#FFEDEDED" />
                                                                    <GradientStop Offset="1" Color="#FFE3E3E3" />
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="DesignColor" Value="Gainsboro" />
                                                    </Style>
                                                </c1:C1BrushBuilder.Style>
                                            </c1:C1BrushBuilder>
                                            <c1:ScrollBarCornerRadiusBuilder x:Name="LeftButtonCornerRadius"
                                                                             BottomLeft="True"
                                                                             ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}"
                                                                             ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                            <c1:ScrollBarCornerRadiusBuilder x:Name="RightButtonCornerRadius"
                                                                             BottomRight="True"
                                                                             ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}"
                                                                             ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                            <Border Grid.ColumnSpan="5"
                                                    Background="{Binding Output,
                                                                         ElementName=BackgroundBrush}"
                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                            <RepeatButton HorizontalContentAlignment="Center"
                                                          VerticalContentAlignment="Center"
                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                          Command="ScrollBar.LineLeftCommand"
                                                          c1:ClearStyleExtensions.CornerRadius="{Binding Output,
                                                                                                         ElementName=LeftButtonCornerRadius}"
                                                          c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                          c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="Focusable" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal" />
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                       Storyboard.TargetName="MouseOverElement"
                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                       Storyboard.TargetName="PressedElement"
                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                       Storyboard.TargetName="DisabledVisualElement"
                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                                           DesignColor="#FFBFE1EA"
                                                                                           ExtrapolationMethod="Absolute"
                                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                           IsHitTestVisible="False"
                                                                                           Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                    <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                                    <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                                    <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                                    <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                                           DesignColor="#FF8ED1E2"
                                                                                           ExtrapolationMethod="Absolute"
                                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                                           IsHitTestVisible="False"
                                                                                           Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                    <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                                    <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                                    <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                                    <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <Border x:Name="MouseOverElement"
                                                                                Background="{Binding Output,
                                                                                                     ElementName=MouseOverBrush}"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                Visibility="Collapsed" />
                                                                        <Border x:Name="PressedElement"
                                                                                Background="{Binding Output,
                                                                                                     ElementName=PressedBrush}"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                Visibility="Collapsed" />
                                                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                          Content="{TemplateBinding Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                          RecognizesAccessKey="True"
                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                        <Border x:Name="DisabledVisualElement"
                                                                                Background="#77E8E8E8"
                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                IsHitTestVisible="False"
                                                                                Visibility="Collapsed" />
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                                <Path Width="4"
                                                      Height="8"
                                                      Data="F1M110.692,342.252L110.692,352.682 104.594,347.467 110.692,342.252z"
                                                      Fill="{TemplateBinding Foreground}"
                                                      Stretch="Fill" />
                                            </RepeatButton>
                                            <Track x:Name="PART_Track" Grid.Column="1">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                                       Height="{TemplateBinding Height}"
                                                                                       Fill="{TemplateBinding Background}" />
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="ScrollBar.PageRightCommand">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                                       Height="{TemplateBinding Height}"
                                                                                       Fill="{TemplateBinding Background}" />
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb Background="{TemplateBinding Background}"
                                                           BorderBrush="{TemplateBinding BorderBrush}"
                                                           BorderThickness="{TemplateBinding BorderThickness}"
                                                           c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}"
                                                           c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                           c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Grid>
                                                                                <VisualStateManager.VisualStateGroups>
                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                        <VisualState x:Name="Normal" />
                                                                                        <VisualState x:Name="MouseOver">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                               Storyboard.TargetName="MouseOverElement"
                                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Pressed">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                               Storyboard.TargetName="PressedElement"
                                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                        <VisualState x:Name="Disabled">
                                                                                            <Storyboard>
                                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                               Storyboard.TargetName="DisabledVisualElement"
                                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                            <Visibility>Visible</Visibility>
                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                            </Storyboard>
                                                                                        </VisualState>
                                                                                    </VisualStateGroup>
                                                                                </VisualStateManager.VisualStateGroups>
                                                                                <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush"
                                                                                                       DesignColor="Gainsboro"
                                                                                                       ExtrapolationMethod="Absolute"
                                                                                                       Input="{TemplateBinding Background}"
                                                                                                       IsHitTestVisible="False"
                                                                                                       Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                                <GradientStop Offset="0" Color="#FFF2F2F2" />
                                                                                                <GradientStop Offset="0.5" Color="#FFEBEBEB" />
                                                                                                <GradientStop Offset="0.5" Color="Gainsboro" />
                                                                                                <GradientStop Offset="1" Color="#FFD0D0D0" />
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                                                       DesignColor="#FFBFE1EA"
                                                                                                       ExtrapolationMethod="Absolute"
                                                                                                       Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                                       IsHitTestVisible="False"
                                                                                                       Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                                <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                                                <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                                                <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                                                <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                                                       DesignColor="#FF8ED1E2"
                                                                                                       ExtrapolationMethod="Absolute"
                                                                                                       Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                                                       IsHitTestVisible="False"
                                                                                                       Visibility="Collapsed">
                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                                <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                                                <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                                                <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                                                <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                                            </LinearGradientBrush>
                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                    </c1:C1BrushBuilder>
                                                                                    <Border x:Name="BackgroundElement"
                                                                                            Background="{Binding Output,
                                                                                                                 ElementName=BackgroundBrush}"
                                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                                            CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                                                    <Border x:Name="MouseOverElement"
                                                                                            Background="{Binding Output,
                                                                                                                 ElementName=MouseOverBrush}"
                                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                                            CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                            Visibility="Collapsed" />
                                                                                    <Border x:Name="PressedElement"
                                                                                            Background="{Binding Output,
                                                                                                                 ElementName=PressedBrush}"
                                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                                            CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                            Visibility="Collapsed" />
                                                                                    <Border x:Name="DisabledVisualElement"
                                                                                            Background="#77E8E8E8"
                                                                                            CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                            IsHitTestVisible="False"
                                                                                            Visibility="Collapsed" />
                                                                                </Grid>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Track.Thumb>
                                            </Track>
                                            <RepeatButton Grid.Column="2"
                                                          HorizontalContentAlignment="Center"
                                                          VerticalContentAlignment="Center"
                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                          Command="ScrollBar.LineRightCommand"
                                                          c1:ClearStyleExtensions.CornerRadius="{Binding Output,
                                                                                                         ElementName=RightButtonCornerRadius}"
                                                          c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                          c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                <RepeatButton.Style>
                                                    <Style TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="Focusable" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                <VisualState x:Name="Normal" />
                                                                                <VisualState x:Name="MouseOver">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                       Storyboard.TargetName="MouseOverElement"
                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Pressed">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                       Storyboard.TargetName="PressedElement"
                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Disabled">
                                                                                    <Storyboard>
                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                       Storyboard.TargetName="DisabledVisualElement"
                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                    <Visibility>Visible</Visibility>
                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                            </DiscreteObjectKeyFrame>
                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                                           DesignColor="#FFBFE1EA"
                                                                                           ExtrapolationMethod="Absolute"
                                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                           IsHitTestVisible="False"
                                                                                           Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                    <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                                    <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                                    <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                                    <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                                           DesignColor="#FF8ED1E2"
                                                                                           ExtrapolationMethod="Absolute"
                                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                                           IsHitTestVisible="False"
                                                                                           Visibility="Collapsed">
                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                    <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                                    <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                                    <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                                    <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                                </LinearGradientBrush>
                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                        </c1:C1BrushBuilder>
                                                                        <Border x:Name="MouseOverElement"
                                                                                Background="{Binding Output,
                                                                                                     ElementName=MouseOverBrush}"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                Visibility="Collapsed" />
                                                                        <Border x:Name="PressedElement"
                                                                                Background="{Binding Output,
                                                                                                     ElementName=PressedBrush}"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                Visibility="Collapsed" />
                                                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                          Content="{TemplateBinding Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                          RecognizesAccessKey="True"
                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                        <Border x:Name="DisabledVisualElement"
                                                                                Background="#77E8E8E8"
                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                IsHitTestVisible="False"
                                                                                Visibility="Collapsed" />
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                                <Path Width="4"
                                                      Height="8"
                                                      Data="F1M511.047,352.682L511.047,342.252 517.145,347.467 511.047,352.682z"
                                                      Fill="{TemplateBinding Foreground}"
                                                      Stretch="Fill" />
                                            </RepeatButton>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1ComboBox}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationDecorator" Storyboard.TargetProperty="ValidationState">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationDecorator" Storyboard.TargetProperty="ValidationState">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="InnerBorderBrush"
                                           DesignBrush="#FFFAFBFC"
                                           DesignColor="#FFD1DCE8"
                                           ExtrapolationMethod="Absolute"
                                           Input="{TemplateBinding Background}"
                                           IsHitTestVisible="False"
                                           Visibility="Collapsed" />
                        <c1:C1DropDown x:Name="DropDown"
                                       AutoSizeMode="GrowAndShrink"
                                       Background="White"
                                       BorderBrush="#FFD2D2D2"
                                       BorderThickness="{TemplateBinding BorderThickness}"
                                       CornerRadius="{TemplateBinding CornerRadius}"
                                       DisabledCuesVisibility="Visible"
                                       DropDownDirection="{TemplateBinding DropDownDirection}"
                                       DropDownHeight="{TemplateBinding DropDownHeight}"
                                       DropDownWidth="{TemplateBinding DropDownWidth}"
                                       FocusBrush="{TemplateBinding FocusBrush}"
                                       FocusCuesVisibility="{TemplateBinding FocusCuesVisibility}"
                                       Foreground="{TemplateBinding ButtonForeground}"
                                       HeaderPadding="0"
                                       IsEnabled="{TemplateBinding IsEnabled}"
                                       IsTabStop="False"
                                       MaxDropDownHeight="{TemplateBinding MaxDropDownHeight}"
                                       MaxDropDownWidth="{TemplateBinding MaxDropDownWidth}"
                                       Padding="0"
                                       Style="{DynamicResource C1DropDownStyle1}">
                            <c1:C1DropDown.Header>
                                <Grid>
                                    <Border Background="{TemplateBinding Background}">
                                        <Border.CornerRadius>
                                            <Binding ConverterParameter="topleft bottomleft"
                                                     Path="CornerRadius"
                                                     RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <c1:C1SideRadiusConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </Border.CornerRadius>
                                    </Border>
                                    <c1:C1TextEditableContentControl x:Name="ComboHeader"
                                                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                     BorderThickness="0"
                                                                     DisabledCuesVisibility="Collapsed"
                                                                     FontFamily="{TemplateBinding FontFamily}"
                                                                     FontSize="{TemplateBinding FontSize}"
                                                                     FontStretch="{TemplateBinding FontStretch}"
                                                                     FontStyle="{TemplateBinding FontStyle}"
                                                                     FontWeight="{TemplateBinding FontWeight}"
                                                                     Foreground="{TemplateBinding Foreground}"
                                                                     IsEnabled="{TemplateBinding IsEnabled}"
                                                                     IsTabStop="True"
                                                                     Padding="10,2,2,2"
                                                                     SelectionBackground="{TemplateBinding SelectionBackground}"
                                                                     SelectionForeground="{TemplateBinding SelectionForeground}"
                                                                     Style="{DynamicResource C1TextEditableContentControlStyle}"
                                                                     TextAlignment="{TemplateBinding TextAlignment}" />
                                    <Rectangle x:Name="HeaderClickInterceptor" Fill="Transparent" />
                                </Grid>
                            </c1:C1DropDown.Header>
                            <ScrollViewer x:Name="ScrollViewer"
                                          HorizontalContentAlignment="{Binding HorizontalContentAlignment,
                                                                               RelativeSource={RelativeSource TemplatedParent}}"
                                          VerticalContentAlignment="{Binding VerticalContentAlignment,
                                                                             RelativeSource={RelativeSource TemplatedParent}}"
                                          Background="{Binding Background,
                                                               RelativeSource={RelativeSource TemplatedParent}}"
                                          BorderBrush="{Binding BorderBrush,
                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          Foreground="{Binding Foreground,
                                                               RelativeSource={RelativeSource TemplatedParent}}"
                                          HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility),
                                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                          IsTabStop="False"
                                          Padding="{Binding Padding,
                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                          VerticalScrollBarVisibility="{Binding (ScrollViewer.VerticalScrollBarVisibility),
                                                                                RelativeSource={RelativeSource TemplatedParent}}"
                                          c1:ClearStyleExtensions.CornerRadius="{TemplateBinding CornerRadius}"
                                          c1:ClearStyleExtensions.ScrollBarStyle="{Binding ScrollBarStyle,
                                                                                           RelativeSource={RelativeSource TemplatedParent}}">
                                <ScrollViewer.Style>
                                    <Style TargetType="{x:Type ScrollViewer}">
                                        <Setter Property="c1:ClearStyleExtensions.ButtonBackground" Value="Gainsboro" />
                                        <Setter Property="c1:ClearStyleExtensions.MouseOverBrush" Value="#FFBDE6FD" />
                                        <Setter Property="c1:ClearStyleExtensions.PressedBrush" Value="#FFA9DAF3" />
                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                        <Setter Property="VerticalContentAlignment" Value="Top" />
                                        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
                                        <Setter Property="Padding" Value="4" />
                                        <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="2" />
                                        <Setter Property="c1:ClearStyleExtensions.ButtonForeground" Value="Black" />
                                        <Setter Property="c1:ClearStyleExtensions.ScrollBarStyle">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type ScrollBar}">
                                                    <Setter Property="Background" Value="Gainsboro" />
                                                    <Setter Property="BorderBrush" Value="#FF707070" />
                                                    <Setter Property="BorderThickness" Value="1" />
                                                    <Setter Property="Foreground" Value="Black" />
                                                    <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0" />
                                                    <Setter Property="c1:ClearStyleExtensions.ButtonCornerRadius" Value="2" />
                                                    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                                                    <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                                                        <RowDefinition Height="1E-05*" />
                                                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                                                    </Grid.RowDefinitions>
                                                                    <c1:C1BrushBuilder x:Name="VBackgroundBrush"
                                                                                       ExtrapolationMethod="Absolute"
                                                                                       Input="{TemplateBinding Background}"
                                                                                       IsHitTestVisible="False"
                                                                                       Visibility="Collapsed">
                                                                        <c1:C1BrushBuilder.Style>
                                                                            <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                                                <Setter Property="DesignBrush">
                                                                                    <Setter.Value>
                                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                                            <GradientStop Offset="0" Color="#FFE1E1E1" />
                                                                                            <GradientStop Offset="0.2" Color="#FFEDEDED" />
                                                                                            <GradientStop Offset="0.8" Color="#FFEDEDED" />
                                                                                            <GradientStop Offset="1" Color="#FFE3E3E3" />
                                                                                        </LinearGradientBrush>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                                <Setter Property="DesignColor" Value="Gainsboro" />
                                                                            </Style>
                                                                        </c1:C1BrushBuilder.Style>
                                                                    </c1:C1BrushBuilder>
                                                                    <c1:ScrollBarCornerRadiusBuilder x:Name="TopButtonCornerRadius"
                                                                                                     ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}"
                                                                                                     ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                     TopRight="True" />
                                                                    <c1:ScrollBarCornerRadiusBuilder x:Name="BottomButtonCornerRadius"
                                                                                                     BottomRight="True"
                                                                                                     ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}"
                                                                                                     ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                                    <Border Grid.RowSpan="5"
                                                                            Background="{Binding Output,
                                                                                                 ElementName=VBackgroundBrush}"
                                                                            CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                                    <RepeatButton HorizontalContentAlignment="Center"
                                                                                  VerticalContentAlignment="Center"
                                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                                  Command="ScrollBar.LineUpCommand"
                                                                                  c1:ClearStyleExtensions.CornerRadius="{Binding Output,
                                                                                                                                 ElementName=TopButtonCornerRadius}"
                                                                                  c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                  c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                <Setter Property="Focusable" Value="False" />
                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Grid x:Name="Root" Background="Transparent">
                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                        <VisualState x:Name="Normal" />
                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                               Storyboard.TargetName="MouseOverElement"
                                                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Pressed">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                               Storyboard.TargetName="PressedElement"
                                                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Disabled">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                               Storyboard.TargetName="DisabledVisualElement"
                                                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                    </VisualStateGroup>
                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                                                                   DesignColor="#FFBFE1EA"
                                                                                                                   ExtrapolationMethod="Absolute"
                                                                                                                   Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                                                   IsHitTestVisible="False"
                                                                                                                   Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                                            <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                                                            <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                                                            <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                                                            <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                                                                   DesignColor="#FF8ED1E2"
                                                                                                                   ExtrapolationMethod="Absolute"
                                                                                                                   Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                                                                   IsHitTestVisible="False"
                                                                                                                   Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                                            <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                                                            <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                                                            <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                                                            <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <Border x:Name="MouseOverElement"
                                                                                                        Background="{Binding Output,
                                                                                                                             ElementName=MouseOverBrush}"
                                                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                        Visibility="Collapsed" />
                                                                                                <Border x:Name="PressedElement"
                                                                                                        Background="{Binding Output,
                                                                                                                             ElementName=PressedBrush}"
                                                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                        Visibility="Collapsed" />
                                                                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                                  Content="{TemplateBinding Content}"
                                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                                  RecognizesAccessKey="True"
                                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                                <Border x:Name="DisabledVisualElement"
                                                                                                        Background="#77E8E8E8"
                                                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                        IsHitTestVisible="False"
                                                                                                        Visibility="Collapsed" />
                                                                                            </Grid>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                        <Path Width="8"
                                                                              Height="4"
                                                                              Data="F1M541.537,173.589L531.107,173.589 536.322,167.49 541.537,173.589z"
                                                                              Fill="{TemplateBinding Foreground}"
                                                                              Stretch="Fill" />
                                                                    </RepeatButton>
                                                                    <Track x:Name="PART_Track"
                                                                           Grid.Row="1"
                                                                           IsDirectionReversed="True">
                                                                        <Track.DecreaseRepeatButton>
                                                                            <RepeatButton Command="ScrollBar.PageUpCommand">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                        <Setter Property="Background" Value="Transparent" />
                                                                                        <Setter Property="Focusable" Value="False" />
                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Rectangle Width="{TemplateBinding Width}"
                                                                                                               Height="{TemplateBinding Height}"
                                                                                                               Fill="{TemplateBinding Background}" />
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.DecreaseRepeatButton>
                                                                        <Track.IncreaseRepeatButton>
                                                                            <RepeatButton Command="ScrollBar.PageDownCommand">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                        <Setter Property="Background" Value="Transparent" />
                                                                                        <Setter Property="Focusable" Value="False" />
                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Rectangle Width="{TemplateBinding Width}"
                                                                                                               Height="{TemplateBinding Height}"
                                                                                                               Fill="{TemplateBinding Background}" />
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                            </RepeatButton>
                                                                        </Track.IncreaseRepeatButton>
                                                                        <Track.Thumb>
                                                                            <Thumb Background="{TemplateBinding Background}"
                                                                                   BorderBrush="{TemplateBinding BorderBrush}"
                                                                                   BorderThickness="{TemplateBinding BorderThickness}"
                                                                                   c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}"
                                                                                   c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                   c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                <Thumb.Style>
                                                                                    <Style TargetType="{x:Type Thumb}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                    <Grid>
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal" />
                                                                                                                <VisualState x:Name="MouseOver">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                                       Storyboard.TargetName="MouseOverElement"
                                                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Pressed">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                                       Storyboard.TargetName="PressedElement"
                                                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                                       Storyboard.TargetName="DisabledVisualElement"
                                                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush"
                                                                                                                               DesignColor="Gainsboro"
                                                                                                                               ExtrapolationMethod="Absolute"
                                                                                                                               Input="{TemplateBinding Background}"
                                                                                                                               IsHitTestVisible="False"
                                                                                                                               Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                                                        <GradientStop Offset="0" Color="#FFF2F2F2" />
                                                                                                                        <GradientStop Offset="0.5" Color="#FFEBEBEB" />
                                                                                                                        <GradientStop Offset="0.5" Color="Gainsboro" />
                                                                                                                        <GradientStop Offset="1" Color="#FFD0D0D0" />
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                                                                               DesignColor="#FFBFE1EA"
                                                                                                                               ExtrapolationMethod="Absolute"
                                                                                                                               Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                                                               IsHitTestVisible="False"
                                                                                                                               Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                                                        <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                                                                        <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                                                                        <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                                                                        <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                                                                               DesignColor="#FF8ED1E2"
                                                                                                                               ExtrapolationMethod="Absolute"
                                                                                                                               Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                                                                               IsHitTestVisible="False"
                                                                                                                               Visibility="Collapsed">
                                                                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                                                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                                                        <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                                                                        <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                                                                        <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                                                                        <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                                                                    </LinearGradientBrush>
                                                                                                                </c1:C1BrushBuilder.DesignBrush>
                                                                                                            </c1:C1BrushBuilder>
                                                                                                            <Border x:Name="BackgroundElement"
                                                                                                                    Background="{Binding Output,
                                                                                                                                         ElementName=BackgroundBrush}"
                                                                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                                                                            <Border x:Name="MouseOverElement"
                                                                                                                    Background="{Binding Output,
                                                                                                                                         ElementName=MouseOverBrush}"
                                                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                                    Visibility="Collapsed" />
                                                                                                            <Border x:Name="PressedElement"
                                                                                                                    Background="{Binding Output,
                                                                                                                                         ElementName=PressedBrush}"
                                                                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                                    Visibility="Collapsed" />
                                                                                                            <Border x:Name="DisabledVisualElement"
                                                                                                                    Background="#77E8E8E8"
                                                                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                                    IsHitTestVisible="False"
                                                                                                                    Visibility="Collapsed" />
                                                                                                        </Grid>
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </Thumb.Style>
                                                                            </Thumb>
                                                                        </Track.Thumb>
                                                                    </Track>
                                                                    <RepeatButton Grid.Row="2"
                                                                                  HorizontalContentAlignment="Center"
                                                                                  VerticalContentAlignment="Center"
                                                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                                                  Command="ScrollBar.LineDownCommand"
                                                                                  c1:ClearStyleExtensions.CornerRadius="{Binding Output,
                                                                                                                                 ElementName=BottomButtonCornerRadius}"
                                                                                  c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                  c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                        <RepeatButton.Style>
                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                <Setter Property="Focusable" Value="False" />
                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                <Setter Property="Template">
                                                                                    <Setter.Value>
                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                            <Grid x:Name="Root" Background="Transparent">
                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                        <VisualState x:Name="Normal" />
                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                               Storyboard.TargetName="MouseOverElement"
                                                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Pressed">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                               Storyboard.TargetName="PressedElement"
                                                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                        <VisualState x:Name="Disabled">
                                                                                                            <Storyboard>
                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                               Storyboard.TargetName="DisabledVisualElement"
                                                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                            </Storyboard>
                                                                                                        </VisualState>
                                                                                                    </VisualStateGroup>
                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                                                                   DesignColor="#FFBFE1EA"
                                                                                                                   ExtrapolationMethod="Absolute"
                                                                                                                   Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                                                   IsHitTestVisible="False"
                                                                                                                   Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                                            <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                                                            <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                                                            <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                                                            <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                                                                   DesignColor="#FF8ED1E2"
                                                                                                                   ExtrapolationMethod="Absolute"
                                                                                                                   Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                                                                   IsHitTestVisible="False"
                                                                                                                   Visibility="Collapsed">
                                                                                                    <c1:C1BrushBuilder.DesignBrush>
                                                                                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                                            <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                                                            <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                                                            <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                                                            <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                                                        </LinearGradientBrush>
                                                                                                    </c1:C1BrushBuilder.DesignBrush>
                                                                                                </c1:C1BrushBuilder>
                                                                                                <Border x:Name="MouseOverElement"
                                                                                                        Background="{Binding Output,
                                                                                                                             ElementName=MouseOverBrush}"
                                                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                        Visibility="Collapsed" />
                                                                                                <Border x:Name="PressedElement"
                                                                                                        Background="{Binding Output,
                                                                                                                             ElementName=PressedBrush}"
                                                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                        Visibility="Collapsed" />
                                                                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                                  Content="{TemplateBinding Content}"
                                                                                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                                  RecognizesAccessKey="True"
                                                                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                                <Border x:Name="DisabledVisualElement"
                                                                                                        Background="#77E8E8E8"
                                                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                        IsHitTestVisible="False"
                                                                                                        Visibility="Collapsed" />
                                                                                            </Grid>
                                                                                        </ControlTemplate>
                                                                                    </Setter.Value>
                                                                                </Setter>
                                                                            </Style>
                                                                        </RepeatButton.Style>
                                                                        <Path Width="8"
                                                                              Height="4"
                                                                              Data="F1M531.107,321.943L541.537,321.943 536.322,328.042 531.107,321.943z"
                                                                              Fill="{TemplateBinding Foreground}"
                                                                              Stretch="Fill" />
                                                                    </RepeatButton>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="Orientation" Value="Horizontal">
                                                            <Setter Property="BorderThickness" Value="1" />
                                                            <Setter Property="Foreground" Value="Black" />
                                                            <Setter Property="c1:ClearStyleExtensions.CornerRadius" Value="0" />
                                                            <Setter Property="Width" Value="Auto" />
                                                            <Setter Property="MinWidth" Value="0" />
                                                            <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                                                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                                                                <ColumnDefinition Width="1E-05*" />
                                                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                                                            </Grid.ColumnDefinitions>
                                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush"
                                                                                               ExtrapolationMethod="Absolute"
                                                                                               Input="{TemplateBinding Background}"
                                                                                               IsHitTestVisible="False"
                                                                                               Visibility="Collapsed">
                                                                                <c1:C1BrushBuilder.Style>
                                                                                    <Style TargetType="{x:Type c1:C1BrushBuilder}">
                                                                                        <Setter Property="DesignBrush">
                                                                                            <Setter.Value>
                                                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                                                    <GradientStop Offset="0" Color="#FFE1E1E1" />
                                                                                                    <GradientStop Offset="0.2" Color="#FFEDEDED" />
                                                                                                    <GradientStop Offset="0.8" Color="#FFEDEDED" />
                                                                                                    <GradientStop Offset="1" Color="#FFE3E3E3" />
                                                                                                </LinearGradientBrush>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                        <Setter Property="DesignColor" Value="Gainsboro" />
                                                                                    </Style>
                                                                                </c1:C1BrushBuilder.Style>
                                                                            </c1:C1BrushBuilder>
                                                                            <c1:ScrollBarCornerRadiusBuilder x:Name="LeftButtonCornerRadius"
                                                                                                             BottomLeft="True"
                                                                                                             ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}"
                                                                                                             ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                                            <c1:ScrollBarCornerRadiusBuilder x:Name="RightButtonCornerRadius"
                                                                                                             BottomRight="True"
                                                                                                             ButtonCornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}"
                                                                                                             ScrollBarCornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                                            <Border Grid.ColumnSpan="5"
                                                                                    Background="{Binding Output,
                                                                                                         ElementName=BackgroundBrush}"
                                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                                            <RepeatButton HorizontalContentAlignment="Center"
                                                                                          VerticalContentAlignment="Center"
                                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                                          Command="ScrollBar.LineLeftCommand"
                                                                                          c1:ClearStyleExtensions.CornerRadius="{Binding Output,
                                                                                                                                         ElementName=LeftButtonCornerRadius}"
                                                                                          c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                          c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                        <Setter Property="Focusable" Value="False" />
                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal" />
                                                                                                                <VisualState x:Name="MouseOver">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                                       Storyboard.TargetName="MouseOverElement"
                                                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Pressed">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                                       Storyboard.TargetName="PressedElement"
                                                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                                       Storyboard.TargetName="DisabledVisualElement"
                                                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                                                                           DesignColor="#FFBFE1EA"
                                                                                                                           ExtrapolationMethod="Absolute"
                                                                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                                                           IsHitTestVisible="False"
                                                                                                                           Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                                                    <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                                                                    <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                                                                    <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                                                                    <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                                                                </LinearGradientBrush>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                                                                           DesignColor="#FF8ED1E2"
                                                                                                                           ExtrapolationMethod="Absolute"
                                                                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                                                                           IsHitTestVisible="False"
                                                                                                                           Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                                                    <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                                                                    <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                                                                    <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                                                                    <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                                                                </LinearGradientBrush>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <Border x:Name="MouseOverElement"
                                                                                                                Background="{Binding Output,
                                                                                                                                     ElementName=MouseOverBrush}"
                                                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                                Visibility="Collapsed" />
                                                                                                        <Border x:Name="PressedElement"
                                                                                                                Background="{Binding Output,
                                                                                                                                     ElementName=PressedBrush}"
                                                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                                Visibility="Collapsed" />
                                                                                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                                          Content="{TemplateBinding Content}"
                                                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                                          RecognizesAccessKey="True"
                                                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                                        <Border x:Name="DisabledVisualElement"
                                                                                                                Background="#77E8E8E8"
                                                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                                IsHitTestVisible="False"
                                                                                                                Visibility="Collapsed" />
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                                <Path Width="4"
                                                                                      Height="8"
                                                                                      Data="F1M110.692,342.252L110.692,352.682 104.594,347.467 110.692,342.252z"
                                                                                      Fill="{TemplateBinding Foreground}"
                                                                                      Stretch="Fill" />
                                                                            </RepeatButton>
                                                                            <Track x:Name="PART_Track" Grid.Column="1">
                                                                                <Track.DecreaseRepeatButton>
                                                                                    <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                                                        <RepeatButton.Style>
                                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                <Setter Property="Background" Value="Transparent" />
                                                                                                <Setter Property="Focusable" Value="False" />
                                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                                                                       Height="{TemplateBinding Height}"
                                                                                                                       Fill="{TemplateBinding Background}" />
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </RepeatButton.Style>
                                                                                    </RepeatButton>
                                                                                </Track.DecreaseRepeatButton>
                                                                                <Track.IncreaseRepeatButton>
                                                                                    <RepeatButton Command="ScrollBar.PageRightCommand">
                                                                                        <RepeatButton.Style>
                                                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                <Setter Property="Background" Value="Transparent" />
                                                                                                <Setter Property="Focusable" Value="False" />
                                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                            <Rectangle Width="{TemplateBinding Width}"
                                                                                                                       Height="{TemplateBinding Height}"
                                                                                                                       Fill="{TemplateBinding Background}" />
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </RepeatButton.Style>
                                                                                    </RepeatButton>
                                                                                </Track.IncreaseRepeatButton>
                                                                                <Track.Thumb>
                                                                                    <Thumb Background="{TemplateBinding Background}"
                                                                                           BorderBrush="{TemplateBinding BorderBrush}"
                                                                                           BorderThickness="{TemplateBinding BorderThickness}"
                                                                                           c1:ClearStyleExtensions.CornerRadius="{TemplateBinding c1:ClearStyleExtensions.ButtonCornerRadius}"
                                                                                           c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                           c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                        <Thumb.Style>
                                                                                            <Style TargetType="{x:Type Thumb}">
                                                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                                <Setter Property="IsTabStop" Value="False" />
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                                            <Grid>
                                                                                                                <VisualStateManager.VisualStateGroups>
                                                                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                                                                        <VisualState x:Name="Normal" />
                                                                                                                        <VisualState x:Name="MouseOver">
                                                                                                                            <Storyboard>
                                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                                               Storyboard.TargetName="MouseOverElement"
                                                                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualState>
                                                                                                                        <VisualState x:Name="Pressed">
                                                                                                                            <Storyboard>
                                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                                               Storyboard.TargetName="PressedElement"
                                                                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualState>
                                                                                                                        <VisualState x:Name="Disabled">
                                                                                                                            <Storyboard>
                                                                                                                                <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                                               Storyboard.TargetName="DisabledVisualElement"
                                                                                                                                                               Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                                                                            <Visibility>Visible</Visibility>
                                                                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                                                                    </DiscreteObjectKeyFrame>
                                                                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                                                            </Storyboard>
                                                                                                                        </VisualState>
                                                                                                                    </VisualStateGroup>
                                                                                                                </VisualStateManager.VisualStateGroups>
                                                                                                                <Grid x:Name="ThumbVisual" Margin="0,1">
                                                                                                                    <c1:C1BrushBuilder x:Name="BackgroundBrush"
                                                                                                                                       DesignColor="Gainsboro"
                                                                                                                                       ExtrapolationMethod="Absolute"
                                                                                                                                       Input="{TemplateBinding Background}"
                                                                                                                                       IsHitTestVisible="False"
                                                                                                                                       Visibility="Collapsed">
                                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                                                                <GradientStop Offset="0" Color="#FFF2F2F2" />
                                                                                                                                <GradientStop Offset="0.5" Color="#FFEBEBEB" />
                                                                                                                                <GradientStop Offset="0.5" Color="Gainsboro" />
                                                                                                                                <GradientStop Offset="1" Color="#FFD0D0D0" />
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                                    </c1:C1BrushBuilder>
                                                                                                                    <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                                                                                       DesignColor="#FFBFE1EA"
                                                                                                                                       ExtrapolationMethod="Absolute"
                                                                                                                                       Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                                                                       IsHitTestVisible="False"
                                                                                                                                       Visibility="Collapsed">
                                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                                                                <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                                                                                <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                                                                                <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                                                                                <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                                    </c1:C1BrushBuilder>
                                                                                                                    <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                                                                                       DesignColor="#FF8ED1E2"
                                                                                                                                       ExtrapolationMethod="Absolute"
                                                                                                                                       Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                                                                                       IsHitTestVisible="False"
                                                                                                                                       Visibility="Collapsed">
                                                                                                                        <c1:C1BrushBuilder.DesignBrush>
                                                                                                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                                                                <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                                                                                <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                                                                                <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                                                                                <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                                                                            </LinearGradientBrush>
                                                                                                                        </c1:C1BrushBuilder.DesignBrush>
                                                                                                                    </c1:C1BrushBuilder>
                                                                                                                    <Border x:Name="BackgroundElement"
                                                                                                                            Background="{Binding Output,
                                                                                                                                                 ElementName=BackgroundBrush}"
                                                                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                                            CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                                                                                    <Border x:Name="MouseOverElement"
                                                                                                                            Background="{Binding Output,
                                                                                                                                                 ElementName=MouseOverBrush}"
                                                                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                                            CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                                            Visibility="Collapsed" />
                                                                                                                    <Border x:Name="PressedElement"
                                                                                                                            Background="{Binding Output,
                                                                                                                                                 ElementName=PressedBrush}"
                                                                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                                            CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                                            Visibility="Collapsed" />
                                                                                                                    <Border x:Name="DisabledVisualElement"
                                                                                                                            Background="#77E8E8E8"
                                                                                                                            CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                                            IsHitTestVisible="False"
                                                                                                                            Visibility="Collapsed" />
                                                                                                                </Grid>
                                                                                                            </Grid>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Thumb.Style>
                                                                                    </Thumb>
                                                                                </Track.Thumb>
                                                                            </Track>
                                                                            <RepeatButton Grid.Column="2"
                                                                                          HorizontalContentAlignment="Center"
                                                                                          VerticalContentAlignment="Center"
                                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                                          Command="ScrollBar.LineRightCommand"
                                                                                          c1:ClearStyleExtensions.CornerRadius="{Binding Output,
                                                                                                                                         ElementName=RightButtonCornerRadius}"
                                                                                          c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                          c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}">
                                                                                <RepeatButton.Style>
                                                                                    <Style TargetType="{x:Type RepeatButton}">
                                                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                                        <Setter Property="Focusable" Value="False" />
                                                                                        <Setter Property="IsTabStop" Value="False" />
                                                                                        <Setter Property="Template">
                                                                                            <Setter.Value>
                                                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                                    <Grid x:Name="Root" Background="Transparent">
                                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                                <VisualState x:Name="Normal" />
                                                                                                                <VisualState x:Name="MouseOver">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                                       Storyboard.TargetName="MouseOverElement"
                                                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Pressed">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                                       Storyboard.TargetName="PressedElement"
                                                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                                <VisualState x:Name="Disabled">
                                                                                                                    <Storyboard>
                                                                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                                                                       Storyboard.TargetName="DisabledVisualElement"
                                                                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                                                                    <Visibility>Visible</Visibility>
                                                                                                                                </DiscreteObjectKeyFrame.Value>
                                                                                                                            </DiscreteObjectKeyFrame>
                                                                                                                        </ObjectAnimationUsingKeyFrames>
                                                                                                                    </Storyboard>
                                                                                                                </VisualState>
                                                                                                            </VisualStateGroup>
                                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                                                                           DesignColor="#FFBFE1EA"
                                                                                                                           ExtrapolationMethod="Absolute"
                                                                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                                                                           IsHitTestVisible="False"
                                                                                                                           Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                                                    <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                                                                    <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                                                                    <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                                                                    <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                                                                </LinearGradientBrush>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                                                                           DesignColor="#FF8ED1E2"
                                                                                                                           ExtrapolationMethod="Absolute"
                                                                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                                                                           IsHitTestVisible="False"
                                                                                                                           Visibility="Collapsed">
                                                                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                                                                    <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                                                                    <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                                                                    <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                                                                    <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                                                                </LinearGradientBrush>
                                                                                                            </c1:C1BrushBuilder.DesignBrush>
                                                                                                        </c1:C1BrushBuilder>
                                                                                                        <Border x:Name="MouseOverElement"
                                                                                                                Background="{Binding Output,
                                                                                                                                     ElementName=MouseOverBrush}"
                                                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                                Visibility="Collapsed" />
                                                                                                        <Border x:Name="PressedElement"
                                                                                                                Background="{Binding Output,
                                                                                                                                     ElementName=PressedBrush}"
                                                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                                Visibility="Collapsed" />
                                                                                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                                                          Content="{TemplateBinding Content}"
                                                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                                                          RecognizesAccessKey="True"
                                                                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                                                        <Border x:Name="DisabledVisualElement"
                                                                                                                Background="#77E8E8E8"
                                                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                                IsHitTestVisible="False"
                                                                                                                Visibility="Collapsed" />
                                                                                                    </Grid>
                                                                                                </ControlTemplate>
                                                                                            </Setter.Value>
                                                                                        </Setter>
                                                                                    </Style>
                                                                                </RepeatButton.Style>
                                                                                <Path Width="4"
                                                                                      Height="8"
                                                                                      Data="F1M511.047,352.682L511.047,342.252 517.145,347.467 511.047,352.682z"
                                                                                      Fill="{TemplateBinding Foreground}"
                                                                                      Stretch="Fill" />
                                                                            </RepeatButton>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*" />
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="*" />
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>
                                                            <c1:ScrollViewerCornerRadiusBuilder x:Name="verticalRadiusBuilder"
                                                                                                Width="0"
                                                                                                Height="0"
                                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                                                                Orientation="Vertical"
                                                                                                VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                                                            <c1:ScrollViewerCornerRadiusBuilder x:Name="horizontalRadiusBuilder"
                                                                                                Width="0"
                                                                                                Height="0"
                                                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                                                                Orientation="Horizontal"
                                                                                                VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                                                            <c1:ScrollViewerContentPresenterClip x:Name="contentPresenterClip"
                                                                                                 Width="0"
                                                                                                 Height="0"
                                                                                                 CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                                                 HorizontalScrollBarVisibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                                                                 ScrollContentPresenter="{Binding ElementName=PART_ScrollContentPresenter}"
                                                                                                 VerticalScrollBarVisibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                                                            <Grid Clip="{Binding Output, ElementName=contentPresenterClip}">
                                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                                        Margin="{TemplateBinding Padding}"
                                                                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                                        CanHorizontallyScroll="False"
                                                                                        CanVerticallyScroll="False"
                                                                                        Content="{TemplateBinding Content}"
                                                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                        Cursor="{TemplateBinding Cursor}" />
                                                            </Grid>
                                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                                       Grid.Row="0"
                                                                       Grid.Column="1"
                                                                       Width="18"
                                                                       Background="{TemplateBinding c1:ClearStyleExtensions.ButtonBackground}"
                                                                       BorderBrush="{TemplateBinding BorderBrush}"
                                                                       Foreground="{TemplateBinding c1:ClearStyleExtensions.ButtonForeground}"
                                                                       IsTabStop="False"
                                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                                       Minimum="0"
                                                                       Orientation="Vertical"
                                                                       Style="{TemplateBinding c1:ClearStyleExtensions.ScrollBarStyle}"
                                                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                                       c1:ClearStyleExtensions.CornerRadius="{Binding Output,
                                                                                                                      ElementName=verticalRadiusBuilder}"
                                                                       c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                       c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                       Value="{TemplateBinding VerticalOffset}" />
                                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                                       Grid.Row="1"
                                                                       Grid.Column="0"
                                                                       Height="18"
                                                                       Background="{TemplateBinding c1:ClearStyleExtensions.ButtonBackground}"
                                                                       BorderBrush="{TemplateBinding BorderBrush}"
                                                                       Foreground="{TemplateBinding c1:ClearStyleExtensions.ButtonForeground}"
                                                                       IsTabStop="False"
                                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                                       Minimum="0"
                                                                       Orientation="Horizontal"
                                                                       Style="{TemplateBinding c1:ClearStyleExtensions.ScrollBarStyle}"
                                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                                       c1:ClearStyleExtensions.CornerRadius="{Binding Output,
                                                                                                                      ElementName=horizontalRadiusBuilder}"
                                                                       c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                       c1:ClearStyleExtensions.PressedBrush="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                       Value="{TemplateBinding HorizontalOffset}" />
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ScrollViewer.Style>
                                <c1:ScrollViewerTouchBehavior.TouchBehavior>
                                    <c1:ScrollViewerTouchBehavior />
                                </c1:ScrollViewerTouchBehavior.TouchBehavior>
                                <ItemsPresenter />
                            </ScrollViewer>
                        </c1:C1DropDown>
                        <c1:C1ValidationDecorator x:Name="ValidationDecorator"
                                                  CornerRadius="{TemplateBinding CornerRadius}"
                                                  Style="{TemplateBinding ValidationDecoratorStyle}"
                                                  Target="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="C1DropDownStyle1" TargetType="{x:Type c1:C1DropDown}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1DropDown}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DropDownOpenStates">
                                <VisualState x:Name="Closed" />
                                <VisualState x:Name="Opened" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0:0:0.001"
                                                                       Storyboard.TargetName="DisabledVisualElement"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0:0:0.001"
                                                                       Storyboard.TargetName="MouseOverElement"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0:0:0.001"
                                                                       Storyboard.TargetName="FocusedVisualElement"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <c1:C1BrushBuilder x:Name="HeaderBackgroundBrush"
                                           DesignBrush="#D2D2D2"
                                           DesignColor="#FFD1DCE8"
                                           ExtrapolationMethod="Absolute"
                                           Input="{TemplateBinding Background}"
                                           IsHitTestVisible="False"
                                           Visibility="Collapsed" />
                        <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                           DesignColor="#FFBFE1EA"
                                           ExtrapolationMethod="Absolute"
                                           Input="{TemplateBinding MouseOverBrush}"
                                           IsHitTestVisible="False"
                                           Visibility="Collapsed">
                            <c1:C1BrushBuilder.DesignBrush>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#FFE7F5FD" />
                                    <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                    <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                    <GradientStop Offset="1" Color="#FFA9D9F5" />
                                </LinearGradientBrush>
                            </c1:C1BrushBuilder.DesignBrush>
                        </c1:C1BrushBuilder>
                        <c1:C1BrushBuilder x:Name="InnerBorderBrush"
                                           DesignBrush="#FFFAFBFC"
                                           DesignColor="#FFD1DCE8"
                                           ExtrapolationMethod="Absolute"
                                           Input="{TemplateBinding Background}"
                                           IsHitTestVisible="False"
                                           Visibility="Collapsed" />
                        <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush"
                                           DesignBrush="#FFFAFBFC"
                                           DesignColor="#FFBFE1EA"
                                           ExtrapolationMethod="Absolute"
                                           Input="{TemplateBinding MouseOverBrush}"
                                           IsHitTestVisible="False"
                                           Visibility="Collapsed" />
                        <Border x:Name="BackgroundElement"
                                Background="{Binding Output,
                                                     ElementName=HeaderBackgroundBrush}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />
                        <Border x:Name="MouseOverElement"
                                Background="{Binding Output,
                                                     ElementName=MouseOverBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl HorizontalAlignment="{TemplateBinding HorizontalHeaderAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalHeaderAlignment}"
                                            FontFamily="{TemplateBinding HeaderFontFamily}"
                                            FontSize="{TemplateBinding HeaderFontSize}"
                                            FontStretch="{TemplateBinding HeaderFontStretch}"
                                            FontStyle="{TemplateBinding HeaderFontStyle}"
                                            FontWeight="{TemplateBinding HeaderFontWeight}"
                                            Foreground="{TemplateBinding HeaderForeground}"
                                            IsTabStop="False"
                                            Padding="{TemplateBinding HeaderPadding}">
                                <ContentControl.Template>
                                    <ControlTemplate TargetType="{x:Type ContentControl}">
                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                          Content="{TemplateBinding Content}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          Cursor="{TemplateBinding Cursor}" />
                                    </ControlTemplate>
                                </ContentControl.Template>
                                <ContentPresenter x:Name="HeaderPresenter"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}" />
                            </ContentControl>
                            <ToggleButton x:Name="ArrowToggle"
                                          Grid.Column="2"
                                          Background="White"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="1,0,0,0"
                                          Foreground="{TemplateBinding HeaderForeground}"
                                          IsEnabled="{TemplateBinding IsEnabled}"
                                          IsTabStop="{TemplateBinding IsTabStop}"
                                          Padding="0"
                                          c1:ClearStyleExtensions.FocusBrush="{TemplateBinding FocusBrush}"
                                          c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}"
                                          c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}">
                                <c1:ClearStyleExtensions.CornerRadius>
                                    <Binding ConverterParameter="topright bottomright"
                                             Path="CornerRadius"
                                             RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <c1:C1SideRadiusConverter />
                                        </Binding.Converter>
                                    </Binding>
                                </c1:ClearStyleExtensions.CornerRadius>
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ButtonBase}">
                                        <Setter Property="Padding" Value="3" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                    <Grid>
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal" />
                                                                <VisualState x:Name="MouseOver">
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                       Storyboard.TargetName="MouseOverElement"
                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                    <Visibility>Visible</Visibility>
                                                                                </DiscreteObjectKeyFrame.Value>
                                                                            </DiscreteObjectKeyFrame>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Pressed">
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                       Storyboard.TargetName="PressedElement"
                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                    <Visibility>Visible</Visibility>
                                                                                </DiscreteObjectKeyFrame.Value>
                                                                            </DiscreteObjectKeyFrame>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Disabled">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0"
                                                                                         Storyboard.TargetName="BackgroundElement"
                                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                         To="0.5" />
                                                                        <DoubleAnimation Duration="0"
                                                                                         Storyboard.TargetName="contentPresenter"
                                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                         To="0.5" />
                                                                    </Storyboard>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                            <VisualStateGroup x:Name="CheckStates">
                                                                <VisualState x:Name="Checked">
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                       Storyboard.TargetName="CheckedElement"
                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                    <Visibility>Visible</Visibility>
                                                                                </DiscreteObjectKeyFrame.Value>
                                                                            </DiscreteObjectKeyFrame>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Unchecked" />
                                                            </VisualStateGroup>
                                                            <VisualStateGroup x:Name="FocusStates">
                                                                <VisualState x:Name="Focused">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0"
                                                                                         Storyboard.TargetName="FocusVisualElement"
                                                                                         Storyboard.TargetProperty="Opacity"
                                                                                         To="1" />
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Unfocused" />
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <c1:C1BrushBuilder x:Name="BackgroundBrush"
                                                                           DesignColor="#FFD1DCE8"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{Binding Background,
                                                                                           RelativeSource={RelativeSource TemplatedParent}}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed">
                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                    <GradientStop Offset="0" Color="#FFF2F2F2" />
                                                                    <GradientStop Offset="0.5" Color="#FFEBEBEB" />
                                                                    <GradientStop Offset="0.5" Color="Gainsboro" />
                                                                    <GradientStop Offset="1" Color="#FFD0D0D0" />
                                                                </LinearGradientBrush>
                                                            </c1:C1BrushBuilder.DesignBrush>
                                                        </c1:C1BrushBuilder>
                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                           DesignColor="#FFBFE1EA"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed">
                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                    <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                    <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                    <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                    <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                </LinearGradientBrush>
                                                            </c1:C1BrushBuilder.DesignBrush>
                                                        </c1:C1BrushBuilder>
                                                        <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                           DesignColor="#FF8ED1E2"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed">
                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                    <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                    <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                    <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                    <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                </LinearGradientBrush>
                                                            </c1:C1BrushBuilder.DesignBrush>
                                                        </c1:C1BrushBuilder>
                                                        <c1:C1BrushBuilder x:Name="CheckedBrush"
                                                                           DesignBrush="#FF8ED1E2"
                                                                           DesignColor="#FF8ED1E2"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed" />
                                                        <c1:C1BrushBuilder x:Name="InnerBorderBrush"
                                                                           DesignBrush="#FFFAFBFC"
                                                                           DesignColor="#FFD1DCE8"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{Binding Background,
                                                                                           RelativeSource={RelativeSource TemplatedParent}}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed" />
                                                        <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush"
                                                                           DesignBrush="#FFFAFBFC"
                                                                           DesignColor="#FFBFE1EA"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed" />
                                                        <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush"
                                                                           DesignBrush="#FFFAFBFC"
                                                                           DesignColor="#FF8ED1E2"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed" />
                                                        <Border x:Name="BackgroundElement"
                                                                Background="{Binding Output,
                                                                                     ElementName=BackgroundBrush}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                            <Border BorderBrush="{Binding Output,
                                                                                          ElementName=InnerBorderBrush}"
                                                                    BorderThickness="1"
                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                        </Border>
                                                        <Border x:Name="CheckedElement"
                                                                Background="{Binding Output,
                                                                                     ElementName=CheckedBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                Visibility="Collapsed" />
                                                        <Border x:Name="MouseOverElement"
                                                                Background="{Binding Output,
                                                                                     ElementName=MouseOverBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                Visibility="Collapsed">
                                                            <Border BorderBrush="{Binding Output,
                                                                                          ElementName=InnerBorderMouseOverBrush}"
                                                                    BorderThickness="1"
                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                        </Border>
                                                        <Border x:Name="PressedElement"
                                                                Background="{Binding Output,
                                                                                     ElementName=PressedBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                Visibility="Collapsed">
                                                            <Border BorderBrush="{Binding Output,
                                                                                          ElementName=InnerBorderPressedBrush}"
                                                                    BorderThickness="1"
                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                        </Border>
                                                        <ContentPresenter x:Name="contentPresenter"
                                                                          Margin="{TemplateBinding Padding}"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                        <Border x:Name="FocusVisualElement"
                                                                BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                IsHitTestVisible="False"
                                                                Opacity="0" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                                <Polygon x:Name="ArrowPolygon"
                                         Margin="4"
                                         Fill="{TemplateBinding Foreground}"
                                         Points="0,0 7,0 3.5,3.5" />
                            </ToggleButton>
                        </Grid>
                        <Border x:Name="FocusedVisualElement"
                                BorderBrush="{TemplateBinding FocusBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Opacity="0"
                                Visibility="{TemplateBinding FocusCuesVisibility}" />
                        <Border x:Name="DisabledVisualElement"
                                Background="#77E8E8E8"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                Visibility="{TemplateBinding DisabledCuesVisibility}" />
                        <Popup x:Name="DropDownPopup"
                               VerticalAlignment="Bottom"
                               AllowsTransparency="True">
                            <Grid Width="{Binding DropDownWidth,
                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                  Height="{Binding DropDownHeight,
                                                   RelativeSource={RelativeSource TemplatedParent}}"
                                  MinWidth="{Binding MinDropDownWidth,
                                                     RelativeSource={RelativeSource TemplatedParent}}"
                                  MinHeight="{Binding MinDropDownHeight,
                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                  MaxWidth="{Binding MaxDropDownWidth,
                                                     RelativeSource={RelativeSource TemplatedParent}}"
                                  MaxHeight="{Binding MaxDropDownHeight,
                                                      RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter Margin="{Binding Padding,
                                                                   RelativeSource={RelativeSource TemplatedParent}}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.BasedOn>
            <Style TargetType="{x:Type c1:C1DropDownButton}">
                <Setter Property="Background" Value="Gainsboro" />
                <Setter Property="HeaderBackground" Value="Gainsboro" />
                <Setter Property="BorderBrush" Value="#FF707070" />
                <Setter Property="MouseOverBrush" Value="#FFBDE6FD" />
                <Setter Property="FocusBrush" Value="#FFA9DAF3" />
                <Setter Property="PressedBrush" Value="#FFA9DAF3" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="HeaderForeground" Value="Black" />
                <Setter Property="CornerRadius" Value="2" />
                <Setter Property="VerticalHeaderAlignment" Value="Stretch" />
                <Setter Property="HorizontalHeaderAlignment" Value="Stretch" />
                <Setter Property="HeaderPadding" Value="2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type c1:C1DropDownButton}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="DropDownOpenStates">
                                        <VisualState x:Name="Closed" />
                                        <VisualState x:Name="Opened" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="MouseOver" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Unfocused" />
                                        <VisualState x:Name="Focused" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ValidationStates">
                                        <VisualState x:Name="Valid" />
                                        <VisualState x:Name="InvalidUnfocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationDecorator" Storyboard.TargetProperty="ValidationState">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="InvalidFocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationDecorator" Storyboard.TargetProperty="ValidationState">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ToggleButton x:Name="ArrowToggle"
                                              HorizontalContentAlignment="Stretch"
                                              VerticalContentAlignment="Stretch"
                                              Background="{TemplateBinding Background}"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              FontSize="{TemplateBinding HeaderFontSize}"
                                              FontStyle="{TemplateBinding HeaderFontStyle}"
                                              FontWeight="{TemplateBinding HeaderFontWeight}"
                                              Foreground="{TemplateBinding HeaderForeground}"
                                              IsTabStop="True"
                                              Padding="0"
                                              c1:ClearStyleExtensions.CornerRadius="{TemplateBinding CornerRadius}"
                                              c1:ClearStyleExtensions.FocusBrush="{TemplateBinding FocusBrush}"
                                              c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}"
                                              c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ButtonBase}">
                                            <Setter Property="Padding" Value="3" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                        <Grid>
                                                            <VisualStateManager.VisualStateGroups>
                                                                <VisualStateGroup x:Name="CommonStates">
                                                                    <VisualState x:Name="Normal" />
                                                                    <VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                           Storyboard.TargetName="MouseOverElement"
                                                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Pressed">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                           Storyboard.TargetName="PressedElement"
                                                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Disabled">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0"
                                                                                             Storyboard.TargetName="BackgroundElement"
                                                                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                             To="0.5" />
                                                                            <DoubleAnimation Duration="0"
                                                                                             Storyboard.TargetName="contentPresenter"
                                                                                             Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                             To="0.5" />
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="CheckStates">
                                                                    <VisualState x:Name="Checked">
                                                                        <Storyboard>
                                                                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                           Storyboard.TargetName="CheckedElement"
                                                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                        <Visibility>Visible</Visibility>
                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                </DiscreteObjectKeyFrame>
                                                                            </ObjectAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unchecked" />
                                                                </VisualStateGroup>
                                                                <VisualStateGroup x:Name="FocusStates">
                                                                    <VisualState x:Name="Focused">
                                                                        <Storyboard>
                                                                            <DoubleAnimation Duration="0"
                                                                                             Storyboard.TargetName="FocusVisualElement"
                                                                                             Storyboard.TargetProperty="Opacity"
                                                                                             To="1" />
                                                                        </Storyboard>
                                                                    </VisualState>
                                                                    <VisualState x:Name="Unfocused" />
                                                                </VisualStateGroup>
                                                            </VisualStateManager.VisualStateGroups>
                                                            <c1:C1BrushBuilder x:Name="BackgroundBrush"
                                                                               DesignColor="#FFD1DCE8"
                                                                               ExtrapolationMethod="Absolute"
                                                                               Input="{Binding Background,
                                                                                               RelativeSource={RelativeSource TemplatedParent}}"
                                                                               IsHitTestVisible="False"
                                                                               Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                        <GradientStop Offset="0" Color="#FFF2F2F2" />
                                                                        <GradientStop Offset="0.5" Color="#FFEBEBEB" />
                                                                        <GradientStop Offset="0.5" Color="Gainsboro" />
                                                                        <GradientStop Offset="1" Color="#FFD0D0D0" />
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                               DesignColor="#FFBFE1EA"
                                                                               ExtrapolationMethod="Absolute"
                                                                               Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                               IsHitTestVisible="False"
                                                                               Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                        <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                        <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                        <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                        <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                               DesignColor="#FF8ED1E2"
                                                                               ExtrapolationMethod="Absolute"
                                                                               Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                               IsHitTestVisible="False"
                                                                               Visibility="Collapsed">
                                                                <c1:C1BrushBuilder.DesignBrush>
                                                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                        <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                        <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                        <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                        <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                    </LinearGradientBrush>
                                                                </c1:C1BrushBuilder.DesignBrush>
                                                            </c1:C1BrushBuilder>
                                                            <c1:C1BrushBuilder x:Name="CheckedBrush"
                                                                               DesignBrush="#FF8ED1E2"
                                                                               DesignColor="#FF8ED1E2"
                                                                               ExtrapolationMethod="Absolute"
                                                                               Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                               IsHitTestVisible="False"
                                                                               Visibility="Collapsed" />
                                                            <c1:C1BrushBuilder x:Name="InnerBorderBrush"
                                                                               DesignBrush="#FFFAFBFC"
                                                                               DesignColor="#FFD1DCE8"
                                                                               ExtrapolationMethod="Absolute"
                                                                               Input="{Binding Background,
                                                                                               RelativeSource={RelativeSource TemplatedParent}}"
                                                                               IsHitTestVisible="False"
                                                                               Visibility="Collapsed" />
                                                            <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush"
                                                                               DesignBrush="#FFFAFBFC"
                                                                               DesignColor="#FFBFE1EA"
                                                                               ExtrapolationMethod="Absolute"
                                                                               Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                               IsHitTestVisible="False"
                                                                               Visibility="Collapsed" />
                                                            <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush"
                                                                               DesignBrush="#FFFAFBFC"
                                                                               DesignColor="#FF8ED1E2"
                                                                               ExtrapolationMethod="Absolute"
                                                                               Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                               IsHitTestVisible="False"
                                                                               Visibility="Collapsed" />
                                                            <Border x:Name="BackgroundElement"
                                                                    Background="{Binding Output,
                                                                                         ElementName=BackgroundBrush}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                                <Border BorderBrush="{Binding Output,
                                                                                              ElementName=InnerBorderBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                            </Border>
                                                            <Border x:Name="CheckedElement"
                                                                    Background="{Binding Output,
                                                                                         ElementName=CheckedBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                    Visibility="Collapsed" />
                                                            <Border x:Name="MouseOverElement"
                                                                    Background="{Binding Output,
                                                                                         ElementName=MouseOverBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                    Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output,
                                                                                              ElementName=InnerBorderMouseOverBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                            </Border>
                                                            <Border x:Name="PressedElement"
                                                                    Background="{Binding Output,
                                                                                         ElementName=PressedBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                    Visibility="Collapsed">
                                                                <Border BorderBrush="{Binding Output,
                                                                                              ElementName=InnerBorderPressedBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                            </Border>
                                                            <ContentPresenter x:Name="contentPresenter"
                                                                              Margin="{TemplateBinding Padding}"
                                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                              Content="{TemplateBinding Content}"
                                                                              ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                            <Border x:Name="FocusVisualElement"
                                                                    BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                    IsHitTestVisible="False"
                                                                    Opacity="0" />
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                    <Grid Margin="{TemplateBinding BorderThickness}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter x:Name="HeaderPresenter"
                                                          Margin="{TemplateBinding HeaderPadding}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalHeaderAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalHeaderAlignment}"
                                                          Content="{TemplateBinding Content}"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}" />
                                        <Polygon x:Name="ArrowPolygon"
                                                 Grid.Column="1"
                                                 Margin="4"
                                                 VerticalAlignment="Center"
                                                 Fill="{TemplateBinding Foreground}"
                                                 Points="0,0 7,0 3.5,3.5" />
                                    </Grid>
                                </ToggleButton>
                                <c1:C1ValidationDecorator x:Name="ValidationDecorator"
                                                          Style="{TemplateBinding ValidationDecoratorStyle}"
                                                          Target="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                <Popup x:Name="DropDownPopup"
                                       VerticalAlignment="Bottom"
                                       AllowsTransparency="True">
                                    <Grid Width="{Binding DropDownWidth,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                          Height="{Binding DropDownHeight,
                                                           RelativeSource={RelativeSource TemplatedParent}}"
                                          MinWidth="{Binding MinDropDownWidth,
                                                             RelativeSource={RelativeSource TemplatedParent}}"
                                          MinHeight="{Binding MinDropDownHeight,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                          MaxWidth="{Binding MaxDropDownWidth,
                                                             RelativeSource={RelativeSource TemplatedParent}}"
                                          MaxHeight="{Binding MaxDropDownHeight,
                                                              RelativeSource={RelativeSource TemplatedParent}}">
                                        <ContentPresenter Margin="{Binding Padding,
                                                                           RelativeSource={RelativeSource TemplatedParent}}"
                                                          Content="{TemplateBinding Content}"
                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>

    <Style x:Key="C1TextEditableContentControlStyle" TargetType="{x:Type c1:C1TextEditableContentControl}">
        <Setter Property="SelectionBackground" Value="#FFF8A348" />
        <Setter Property="SelectionForeground" Value="#FF143D66" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1TextEditableContentControl}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationDecorator" Storyboard.TargetProperty="ValidationState">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationDecorator" Storyboard.TargetProperty="ValidationState">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WatermarkStates">
                                <VisualState x:Name="Unwatermarked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Watermark" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Watermarked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border">
                            <Grid Margin="{TemplateBinding BorderThickness}">
                                <ContentControl x:Name="Watermark"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Content="{TemplateBinding Watermark}"
                                                IsTabStop="False"
                                                Opacity="0.65" />
                                <ContentPresenter x:Name="ContentControl"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <c1:C1TextBoxBase x:Name="EditControl"
                                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Background="{TemplateBinding Background}"
                                                  BorderThickness="0"
                                                  FocusCuesVisibility="{TemplateBinding FocusCuesVisibility}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsEnabled="True"
                                                  MouseOverBrush="#FFFBB12A"
                                                  Padding="{TemplateBinding Padding}"
                                                  SelectionBackground="{TemplateBinding SelectionBackground}"
                                                  SelectionBrush="#FFF8A348"
                                                  SelectionForeground="{TemplateBinding SelectionForeground}"
                                                  TextAlignment="{TemplateBinding TextAlignment}" />
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement"
                                Background="#77E8E8E8"
                                CornerRadius="2"
                                IsHitTestVisible="False"
                                Opacity="0"
                                Visibility="{TemplateBinding DisabledCuesVisibility}" />
                        <c1:C1ValidationDecorator x:Name="ValidationDecorator"
                                                  Style="{TemplateBinding ValidationDecoratorStyle}"
                                                  Target="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DateC1DatePickerStyle" TargetType="{x:Type c1:C1DatePicker}">
        <Setter Property="BorderBrush" Value="#FF707070" />
        <Setter Property="SelectionBackground" Value="#FFADD6FF" />
        <Setter Property="SelectionForeground" Value="#FF143D66" />
        <Setter Property="ButtonBackground" Value="Gainsboro" />
        <Setter Property="MouseOverBrush" Value="#FFBDE6FD" />
        <Setter Property="PressedBrush" Value="#FFA9DAF3" />
        <Setter Property="FocusBrush" Value="#FFA9DAF3" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="ButtonForeground" Value="Black" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:C1DatePicker}">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                       Duration="0:0:0.001"
                                                                       Storyboard.TargetName="FocusedVisualElement"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationDecorator" Storyboard.TargetProperty="ValidationState">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidUnfocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationDecorator" Storyboard.TargetProperty="ValidationState">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <c1:ValidationState>InvalidFocused</c1:ValidationState>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BackgroundElement"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <c1:C1MaskedTextBox x:Name="TextBox"
                                                Margin="{TemplateBinding BorderThickness}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                Culture="en-US"
                                                Cursor="IBeam"
                                                DisabledCuesVisibility="Collapsed"
                                                FocusCuesVisibility="Collapsed"
                                                Foreground="{TemplateBinding Foreground}"
                                                IsEnabled="True"
                                                Padding="{TemplateBinding Padding}"
                                                PromptChar="_"
                                                SelectOnFocus="Always"
                                                SelectionBackground="{TemplateBinding SelectionBackground}"
                                                SelectionForeground="{TemplateBinding SelectionForeground}"
                                                TextMaskFormat="IncludePrompt"
                                                Value="" />
                            <Rectangle Grid.Column="1" Fill="{TemplateBinding BorderBrush}">
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Width" Value="1" />
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <Button x:Name="Button"
                                    Grid.Column="2"
                                    Margin="0"
                                    Background="White"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    IsEnabled="{TemplateBinding IsEnabled}"
                                    IsTabStop="False"
                                    Padding="0"
                                    c1:ClearStyleExtensions.MouseOverBrush="{TemplateBinding MouseOverBrush}"
                                    c1:ClearStyleExtensions.PressedBrush="{TemplateBinding PressedBrush}">
                                <c1:ClearStyleExtensions.CornerRadius>
                                    <Binding ConverterParameter="topright bottomright"
                                             Path="CornerRadius"
                                             RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <c1:C1SideRadiusConverter />
                                        </Binding.Converter>
                                    </Binding>
                                </c1:ClearStyleExtensions.CornerRadius>
                                <Button.Style>
                                    <Style TargetType="{x:Type ButtonBase}">
                                        <Setter Property="Padding" Value="3" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ButtonBase}">
                                                    <Grid>
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal" />
                                                                <VisualState x:Name="MouseOver">
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                       Storyboard.TargetName="MouseOverElement"
                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                    <Visibility>Visible</Visibility>
                                                                                </DiscreteObjectKeyFrame.Value>
                                                                            </DiscreteObjectKeyFrame>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Pressed">
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                       Storyboard.TargetName="PressedElement"
                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                    <Visibility>Visible</Visibility>
                                                                                </DiscreteObjectKeyFrame.Value>
                                                                            </DiscreteObjectKeyFrame>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Disabled">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0"
                                                                                         Storyboard.TargetName="BackgroundElement"
                                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                         To="0.5" />
                                                                        <DoubleAnimation Duration="0"
                                                                                         Storyboard.TargetName="contentPresenter"
                                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                         To="0.5" />
                                                                    </Storyboard>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                            <VisualStateGroup x:Name="CheckStates">
                                                                <VisualState x:Name="Checked">
                                                                    <Storyboard>
                                                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                                                       Storyboard.TargetName="CheckedElement"
                                                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                                <DiscreteObjectKeyFrame.Value>
                                                                                    <Visibility>Visible</Visibility>
                                                                                </DiscreteObjectKeyFrame.Value>
                                                                            </DiscreteObjectKeyFrame>
                                                                        </ObjectAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Unchecked" />
                                                            </VisualStateGroup>
                                                            <VisualStateGroup x:Name="FocusStates">
                                                                <VisualState x:Name="Focused">
                                                                    <Storyboard>
                                                                        <DoubleAnimation Duration="0"
                                                                                         Storyboard.TargetName="FocusVisualElement"
                                                                                         Storyboard.TargetProperty="Opacity"
                                                                                         To="1" />
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Unfocused" />
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <c1:C1BrushBuilder x:Name="BackgroundBrush"
                                                                           DesignColor="#FFD1DCE8"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{Binding Background,
                                                                                           RelativeSource={RelativeSource TemplatedParent}}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed">
                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                    <GradientStop Offset="0" Color="#FFF2F2F2" />
                                                                    <GradientStop Offset="0.5" Color="#FFEBEBEB" />
                                                                    <GradientStop Offset="0.5" Color="Gainsboro" />
                                                                    <GradientStop Offset="1" Color="#FFD0D0D0" />
                                                                </LinearGradientBrush>
                                                            </c1:C1BrushBuilder.DesignBrush>
                                                        </c1:C1BrushBuilder>
                                                        <c1:C1BrushBuilder x:Name="MouseOverBrush"
                                                                           DesignColor="#FFBFE1EA"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed">
                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                    <GradientStop Offset="0" Color="#FFE7F5FD" />
                                                                    <GradientStop Offset="0.5" Color="#FFDCF0FC" />
                                                                    <GradientStop Offset="0.5" Color="#FFBDE6FD" />
                                                                    <GradientStop Offset="1" Color="#FFA9D9F5" />
                                                                </LinearGradientBrush>
                                                            </c1:C1BrushBuilder.DesignBrush>
                                                        </c1:C1BrushBuilder>
                                                        <c1:C1BrushBuilder x:Name="PressedBrush"
                                                                           DesignColor="#FF8ED1E2"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed">
                                                            <c1:C1BrushBuilder.DesignBrush>
                                                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                                    <GradientStop Offset="0" Color="#FFA9D9F5" />
                                                                    <GradientStop Offset="0.5" Color="#FFC1E4F5" />
                                                                    <GradientStop Offset="0.5" Color="#FFA9DAF3" />
                                                                    <GradientStop Offset="1" Color="#FF91CDEB" />
                                                                </LinearGradientBrush>
                                                            </c1:C1BrushBuilder.DesignBrush>
                                                        </c1:C1BrushBuilder>
                                                        <c1:C1BrushBuilder x:Name="CheckedBrush"
                                                                           DesignBrush="#FF8ED1E2"
                                                                           DesignColor="#FF8ED1E2"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed" />
                                                        <c1:C1BrushBuilder x:Name="InnerBorderBrush"
                                                                           DesignBrush="#FFFAFBFC"
                                                                           DesignColor="#FFD1DCE8"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{Binding Background,
                                                                                           RelativeSource={RelativeSource TemplatedParent}}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed" />
                                                        <c1:C1BrushBuilder x:Name="InnerBorderMouseOverBrush"
                                                                           DesignBrush="#FFFAFBFC"
                                                                           DesignColor="#FFBFE1EA"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.MouseOverBrush}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed" />
                                                        <c1:C1BrushBuilder x:Name="InnerBorderPressedBrush"
                                                                           DesignBrush="#FFFAFBFC"
                                                                           DesignColor="#FF8ED1E2"
                                                                           ExtrapolationMethod="Absolute"
                                                                           Input="{TemplateBinding c1:ClearStyleExtensions.PressedBrush}"
                                                                           IsHitTestVisible="False"
                                                                           Visibility="Collapsed" />
                                                        <Border x:Name="BackgroundElement"
                                                                Background="{Binding Output,
                                                                                     ElementName=BackgroundBrush}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}">
                                                            <Border BorderBrush="{Binding Output,
                                                                                          ElementName=InnerBorderBrush}"
                                                                    BorderThickness="1"
                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                        </Border>
                                                        <Border x:Name="CheckedElement"
                                                                Background="{Binding Output,
                                                                                     ElementName=CheckedBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                Visibility="Collapsed" />
                                                        <Border x:Name="MouseOverElement"
                                                                Background="{Binding Output,
                                                                                     ElementName=MouseOverBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                Visibility="Collapsed">
                                                            <Border BorderBrush="{Binding Output,
                                                                                          ElementName=InnerBorderMouseOverBrush}"
                                                                    BorderThickness="1"
                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                        </Border>
                                                        <Border x:Name="PressedElement"
                                                                Background="{Binding Output,
                                                                                     ElementName=PressedBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                Visibility="Collapsed">
                                                            <Border BorderBrush="{Binding Output,
                                                                                          ElementName=InnerBorderPressedBrush}"
                                                                    BorderThickness="1"
                                                                    CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}" />
                                                        </Border>
                                                        <ContentPresenter x:Name="contentPresenter"
                                                                          Margin="{TemplateBinding Padding}"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                        <Border x:Name="FocusVisualElement"
                                                                BorderBrush="{TemplateBinding c1:ClearStyleExtensions.FocusBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="{TemplateBinding c1:ClearStyleExtensions.CornerRadius}"
                                                                IsHitTestVisible="False"
                                                                Opacity="0" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                                <Polygon Width="7"
                                         Height="4"
                                         Margin="4"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{TemplateBinding ButtonForeground}"
                                         Points="0,0 7,0 3.5,3.5"
                                         Stretch="Uniform" />
                            </Button>
                        </Grid>
                        <Popup x:Name="Popup" />
                        <Border x:Name="FocusedVisualElement"
                                BorderBrush="{TemplateBinding FocusBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Opacity="0"
                                Visibility="{TemplateBinding FocusCuesVisibility}" />
                        <Border x:Name="MouseOverElement"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed" />
                        <Border x:Name="DisabledVisualElement"
                                Background="#77E8E8E8"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                Visibility="{TemplateBinding DisabledCuesVisibility}" />
                        <c1:C1ValidationDecorator x:Name="ValidationDecorator"
                                                  CornerRadius="{TemplateBinding CornerRadius}"
                                                  Style="{TemplateBinding ValidationDecoratorStyle}"
                                                  Target="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ResizeThumbStyle" TargetType="{x:Type common:ResizeThumb}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Background" Value="#FFE6E6E6" />
        <Setter Property="Foreground" Value="#FFE6E6E6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type common:ResizeThumb}">
                    <Border Background="#FFE6E6E6"
                            BorderBrush="#FFE6E6E6"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Border Background="#FFE6E6E6"
                                    BorderBrush="#FFE6E6E6"
                                    BorderThickness="0,0,1,1" />
                            <Border Margin="1"
                                    Background="#FFE6E6E6"
                                    BorderBrush="#FFE6E6E6"
                                    BorderThickness="0,0,1,1" />
                            <Border Margin="2" Background="#FFE6E6E6" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>